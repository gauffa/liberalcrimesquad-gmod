# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/crimesquad
pkgincludedir = $(includedir)/crimesquad
pkglibdir = $(libdir)/crimesquad
pkglibexecdir = $(libexecdir)/crimesquad
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = crimesquad$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_crimesquad_OBJECTS = crimesquad-game.$(OBJEXT) \
	crimesquad-lcsio.$(OBJEXT) crimesquad-cursesmovie.$(OBJEXT) \
	crimesquad-compat.$(OBJEXT) \
	crimesquad-cursesgraphics.$(OBJEXT) \
	crimesquad-commondisplay.$(OBJEXT) \
	crimesquad-commonactions.$(OBJEXT) \
	crimesquad-consolesupport.$(OBJEXT) \
	crimesquad-getnames.$(OBJEXT) crimesquad-translateid.$(OBJEXT) \
	crimesquad-equipment.$(OBJEXT) crimesquad-creature.$(OBJEXT) \
	crimesquad-titlescreen.$(OBJEXT) \
	crimesquad-highscore.$(OBJEXT) crimesquad-newgame.$(OBJEXT) \
	crimesquad-saveload.$(OBJEXT) crimesquad-basemode.$(OBJEXT) \
	crimesquad-baseactions.$(OBJEXT) crimesquad-activate.$(OBJEXT) \
	crimesquad-reviewmode.$(OBJEXT) crimesquad-advance.$(OBJEXT) \
	crimesquad-mapspecials.$(OBJEXT) \
	crimesquad-newencounter.$(OBJEXT) \
	crimesquad-sitemode.$(OBJEXT) crimesquad-talk.$(OBJEXT) \
	crimesquad-miscactions.$(OBJEXT) \
	crimesquad-sitedisplay.$(OBJEXT) crimesquad-stealth.$(OBJEXT) \
	crimesquad-chase.$(OBJEXT) crimesquad-fight.$(OBJEXT) \
	crimesquad-haulkidnap.$(OBJEXT) \
	crimesquad-activities.$(OBJEXT) crimesquad-daily.$(OBJEXT) \
	crimesquad-date.$(OBJEXT) crimesquad-news.$(OBJEXT) \
	crimesquad-shopsnstuff.$(OBJEXT) crimesquad-siege.$(OBJEXT) \
	crimesquad-endgame.$(OBJEXT) crimesquad-justice.$(OBJEXT) \
	crimesquad-lcsmonthly.$(OBJEXT) crimesquad-monthly.$(OBJEXT) \
	crimesquad-politics.$(OBJEXT) \
	crimesquad-interrogation.$(OBJEXT) \
	crimesquad-recruit.$(OBJEXT) crimesquad-law.$(OBJEXT) \
	crimesquad-configfile.$(OBJEXT) crimesquad-ads.$(OBJEXT) \
	crimesquad-headline.$(OBJEXT) crimesquad-layout.$(OBJEXT) \
	crimesquad-majorevent.$(OBJEXT) \
	crimesquad-squadstory_text.$(OBJEXT) \
	crimesquad-sitemap.$(OBJEXT) crimesquad-location.$(OBJEXT) \
	crimesquad-locationdef.$(OBJEXT) \
	crimesquad-activate_sleepers.$(OBJEXT) \
	crimesquad-sleeper_update.$(OBJEXT) crimesquad-armor.$(OBJEXT) \
	crimesquad-creaturetypes.$(OBJEXT) \
	crimesquad-liberalagenda.$(OBJEXT) crimesquad-misc.$(OBJEXT) \
	crimesquad-help.$(OBJEXT) crimesquad-creaturenames.$(OBJEXT) \
	crimesquad-Markup.$(OBJEXT) crimesquad-vehicle.$(OBJEXT) \
	crimesquad-vehicletype.$(OBJEXT) \
	crimesquad-armortype.$(OBJEXT) crimesquad-clip.$(OBJEXT) \
	crimesquad-cliptype.$(OBJEXT) crimesquad-item.$(OBJEXT) \
	crimesquad-itemtype.$(OBJEXT) crimesquad-loot.$(OBJEXT) \
	crimesquad-loottype.$(OBJEXT) crimesquad-money.$(OBJEXT) \
	crimesquad-weapon.$(OBJEXT) crimesquad-weapontype.$(OBJEXT) \
	crimesquad-shop.$(OBJEXT) crimesquad-log.$(OBJEXT) \
	crimesquad-locations.$(OBJEXT) crimesquad-initfile.$(OBJEXT)
crimesquad_OBJECTS = $(am_crimesquad_OBJECTS)
crimesquad_LDADD = $(LDADD)
crimesquad_LINK = $(CXXLD) $(crimesquad_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(crimesquad_SOURCES)
DIST_SOURCES = $(crimesquad_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mhall/lcsgame/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/mhall/lcsgame/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mhall/lcsgame/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mhall/lcsgame/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lncurses 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mhall/lcsgame/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = crimesquad
PACKAGE_BUGREPORT = jonathansfox@users.sourceforge.net
PACKAGE_NAME = crimesquad
PACKAGE_STRING = crimesquad 4.06.3
PACKAGE_TARNAME = crimesquad
PACKAGE_URL = 
PACKAGE_VERSION = 4.06.3
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 4.06.3
abs_builddir = /home/mhall/lcsgame/src
abs_srcdir = /home/mhall/lcsgame/src
abs_top_builddir = /home/mhall/lcsgame
abs_top_srcdir = /home/mhall/lcsgame
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mhall/lcsgame/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
crimesquad_SOURCES = game.cpp lcsio.cpp cursesmovie.cpp compat.cpp\
 cursesgraphics.cpp lcsio.h cursesmovie.h compat.h cursesgraphics.h includes.h\
 externs.h common/commondisplay.cpp common/commonactions.cpp\
 common/consolesupport.cpp common/getnames.cpp common/translateid.cpp\
 common/equipment.cpp creature/creature.cpp title/titlescreen.cpp\
 title/highscore.cpp title/newgame.cpp title/saveload.cpp basemode/basemode.cpp\
 basemode/baseactions.cpp basemode/activate.cpp basemode/reviewmode.cpp\
 sitemode/advance.cpp sitemode/mapspecials.cpp sitemode/newencounter.cpp\
 sitemode/sitemode.cpp sitemode/talk.cpp sitemode/miscactions.cpp\
 sitemode/sitedisplay.cpp sitemode/stealth.cpp combat/chase.cpp\
 combat/fight.cpp combat/haulkidnap.cpp daily/activities.cpp daily/daily.cpp\
 daily/date.cpp daily/news.cpp daily/shopsnstuff.cpp daily/siege.cpp\
 monthly/endgame.cpp monthly/justice.cpp monthly/lcsmonthly.cpp\
 monthly/monthly.cpp politics/politics.cpp daily/interrogation.cpp\
 daily/recruit.cpp politics/law.cpp politics/alignment.h politics/law.h\
 configfile.cpp configfile.h news/ads.cpp news/headline.cpp news/layout.cpp\
 news/majorevent.cpp news/squadstory_text.cpp sitemode/sitemap.h\
 sitemode/sitemap.cpp news/news.h location.cpp location.h locationdef.cpp\
 locationdef.h basemode/activate_sleepers.cpp monthly/sleeper_update.cpp\
 items/armor.cpp creature/creaturetypes.cpp basemode/liberalagenda.cpp\
 common/misc.cpp common/help.cpp creature/creature.h creature/creaturenames.cpp\
 cmarkup/Markup.cpp cmarkup/Markup.h vehicle/vehicle.cpp vehicle/vehicle.h\
 vehicle/vehicletype.cpp vehicle/vehicletype.h items/weapontype.h\
 items/armortype.cpp items/armortype.h items/clip.cpp items/clip.h\
 items/cliptype.cpp items/cliptype.h items/item.cpp items/item.h\
 items/itemtype.cpp items/itemtype.h items/loot.cpp items/loot.h\
 items/loottype.cpp items/loottype.h items/money.cpp items/money.h\
 items/weapon.cpp items/weapon.h items/weapontype.cpp items/armor.h\
 sitemode/shop.h sitemode/shop.cpp log/log.h log/log.cpp title/locations.cpp\
 title/initfile.cpp

crimesquad_CPPFLAGS = -DINSTALL_DATA_DIR=\"$(datadir)\"
crimesquad_CXXFLAGS = -I$(top_srcdir)/src
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
crimesquad$(EXEEXT): $(crimesquad_OBJECTS) $(crimesquad_DEPENDENCIES) $(EXTRA_crimesquad_DEPENDENCIES) 
	@rm -f crimesquad$(EXEEXT)
	$(crimesquad_LINK) $(crimesquad_OBJECTS) $(crimesquad_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/crimesquad-Markup.Po
include ./$(DEPDIR)/crimesquad-activate.Po
include ./$(DEPDIR)/crimesquad-activate_sleepers.Po
include ./$(DEPDIR)/crimesquad-activities.Po
include ./$(DEPDIR)/crimesquad-ads.Po
include ./$(DEPDIR)/crimesquad-advance.Po
include ./$(DEPDIR)/crimesquad-armor.Po
include ./$(DEPDIR)/crimesquad-armortype.Po
include ./$(DEPDIR)/crimesquad-baseactions.Po
include ./$(DEPDIR)/crimesquad-basemode.Po
include ./$(DEPDIR)/crimesquad-chase.Po
include ./$(DEPDIR)/crimesquad-clip.Po
include ./$(DEPDIR)/crimesquad-cliptype.Po
include ./$(DEPDIR)/crimesquad-commonactions.Po
include ./$(DEPDIR)/crimesquad-commondisplay.Po
include ./$(DEPDIR)/crimesquad-compat.Po
include ./$(DEPDIR)/crimesquad-configfile.Po
include ./$(DEPDIR)/crimesquad-consolesupport.Po
include ./$(DEPDIR)/crimesquad-creature.Po
include ./$(DEPDIR)/crimesquad-creaturenames.Po
include ./$(DEPDIR)/crimesquad-creaturetypes.Po
include ./$(DEPDIR)/crimesquad-cursesgraphics.Po
include ./$(DEPDIR)/crimesquad-cursesmovie.Po
include ./$(DEPDIR)/crimesquad-daily.Po
include ./$(DEPDIR)/crimesquad-date.Po
include ./$(DEPDIR)/crimesquad-endgame.Po
include ./$(DEPDIR)/crimesquad-equipment.Po
include ./$(DEPDIR)/crimesquad-fight.Po
include ./$(DEPDIR)/crimesquad-game.Po
include ./$(DEPDIR)/crimesquad-getnames.Po
include ./$(DEPDIR)/crimesquad-haulkidnap.Po
include ./$(DEPDIR)/crimesquad-headline.Po
include ./$(DEPDIR)/crimesquad-help.Po
include ./$(DEPDIR)/crimesquad-highscore.Po
include ./$(DEPDIR)/crimesquad-initfile.Po
include ./$(DEPDIR)/crimesquad-interrogation.Po
include ./$(DEPDIR)/crimesquad-item.Po
include ./$(DEPDIR)/crimesquad-itemtype.Po
include ./$(DEPDIR)/crimesquad-justice.Po
include ./$(DEPDIR)/crimesquad-law.Po
include ./$(DEPDIR)/crimesquad-layout.Po
include ./$(DEPDIR)/crimesquad-lcsio.Po
include ./$(DEPDIR)/crimesquad-lcsmonthly.Po
include ./$(DEPDIR)/crimesquad-liberalagenda.Po
include ./$(DEPDIR)/crimesquad-location.Po
include ./$(DEPDIR)/crimesquad-locationdef.Po
include ./$(DEPDIR)/crimesquad-locations.Po
include ./$(DEPDIR)/crimesquad-log.Po
include ./$(DEPDIR)/crimesquad-loot.Po
include ./$(DEPDIR)/crimesquad-loottype.Po
include ./$(DEPDIR)/crimesquad-majorevent.Po
include ./$(DEPDIR)/crimesquad-mapspecials.Po
include ./$(DEPDIR)/crimesquad-misc.Po
include ./$(DEPDIR)/crimesquad-miscactions.Po
include ./$(DEPDIR)/crimesquad-money.Po
include ./$(DEPDIR)/crimesquad-monthly.Po
include ./$(DEPDIR)/crimesquad-newencounter.Po
include ./$(DEPDIR)/crimesquad-newgame.Po
include ./$(DEPDIR)/crimesquad-news.Po
include ./$(DEPDIR)/crimesquad-politics.Po
include ./$(DEPDIR)/crimesquad-recruit.Po
include ./$(DEPDIR)/crimesquad-reviewmode.Po
include ./$(DEPDIR)/crimesquad-saveload.Po
include ./$(DEPDIR)/crimesquad-shop.Po
include ./$(DEPDIR)/crimesquad-shopsnstuff.Po
include ./$(DEPDIR)/crimesquad-siege.Po
include ./$(DEPDIR)/crimesquad-sitedisplay.Po
include ./$(DEPDIR)/crimesquad-sitemap.Po
include ./$(DEPDIR)/crimesquad-sitemode.Po
include ./$(DEPDIR)/crimesquad-sleeper_update.Po
include ./$(DEPDIR)/crimesquad-squadstory_text.Po
include ./$(DEPDIR)/crimesquad-stealth.Po
include ./$(DEPDIR)/crimesquad-talk.Po
include ./$(DEPDIR)/crimesquad-titlescreen.Po
include ./$(DEPDIR)/crimesquad-translateid.Po
include ./$(DEPDIR)/crimesquad-vehicle.Po
include ./$(DEPDIR)/crimesquad-vehicletype.Po
include ./$(DEPDIR)/crimesquad-weapon.Po
include ./$(DEPDIR)/crimesquad-weapontype.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

crimesquad-game.o: game.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-game.o -MD -MP -MF $(DEPDIR)/crimesquad-game.Tpo -c -o crimesquad-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp
	$(am__mv) $(DEPDIR)/crimesquad-game.Tpo $(DEPDIR)/crimesquad-game.Po
#	source='game.cpp' object='crimesquad-game.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

crimesquad-game.obj: game.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-game.obj -MD -MP -MF $(DEPDIR)/crimesquad-game.Tpo -c -o crimesquad-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-game.Tpo $(DEPDIR)/crimesquad-game.Po
#	source='game.cpp' object='crimesquad-game.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

crimesquad-lcsio.o: lcsio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-lcsio.o -MD -MP -MF $(DEPDIR)/crimesquad-lcsio.Tpo -c -o crimesquad-lcsio.o `test -f 'lcsio.cpp' || echo '$(srcdir)/'`lcsio.cpp
	$(am__mv) $(DEPDIR)/crimesquad-lcsio.Tpo $(DEPDIR)/crimesquad-lcsio.Po
#	source='lcsio.cpp' object='crimesquad-lcsio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-lcsio.o `test -f 'lcsio.cpp' || echo '$(srcdir)/'`lcsio.cpp

crimesquad-lcsio.obj: lcsio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-lcsio.obj -MD -MP -MF $(DEPDIR)/crimesquad-lcsio.Tpo -c -o crimesquad-lcsio.obj `if test -f 'lcsio.cpp'; then $(CYGPATH_W) 'lcsio.cpp'; else $(CYGPATH_W) '$(srcdir)/lcsio.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-lcsio.Tpo $(DEPDIR)/crimesquad-lcsio.Po
#	source='lcsio.cpp' object='crimesquad-lcsio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-lcsio.obj `if test -f 'lcsio.cpp'; then $(CYGPATH_W) 'lcsio.cpp'; else $(CYGPATH_W) '$(srcdir)/lcsio.cpp'; fi`

crimesquad-cursesmovie.o: cursesmovie.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cursesmovie.o -MD -MP -MF $(DEPDIR)/crimesquad-cursesmovie.Tpo -c -o crimesquad-cursesmovie.o `test -f 'cursesmovie.cpp' || echo '$(srcdir)/'`cursesmovie.cpp
	$(am__mv) $(DEPDIR)/crimesquad-cursesmovie.Tpo $(DEPDIR)/crimesquad-cursesmovie.Po
#	source='cursesmovie.cpp' object='crimesquad-cursesmovie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cursesmovie.o `test -f 'cursesmovie.cpp' || echo '$(srcdir)/'`cursesmovie.cpp

crimesquad-cursesmovie.obj: cursesmovie.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cursesmovie.obj -MD -MP -MF $(DEPDIR)/crimesquad-cursesmovie.Tpo -c -o crimesquad-cursesmovie.obj `if test -f 'cursesmovie.cpp'; then $(CYGPATH_W) 'cursesmovie.cpp'; else $(CYGPATH_W) '$(srcdir)/cursesmovie.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-cursesmovie.Tpo $(DEPDIR)/crimesquad-cursesmovie.Po
#	source='cursesmovie.cpp' object='crimesquad-cursesmovie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cursesmovie.obj `if test -f 'cursesmovie.cpp'; then $(CYGPATH_W) 'cursesmovie.cpp'; else $(CYGPATH_W) '$(srcdir)/cursesmovie.cpp'; fi`

crimesquad-compat.o: compat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-compat.o -MD -MP -MF $(DEPDIR)/crimesquad-compat.Tpo -c -o crimesquad-compat.o `test -f 'compat.cpp' || echo '$(srcdir)/'`compat.cpp
	$(am__mv) $(DEPDIR)/crimesquad-compat.Tpo $(DEPDIR)/crimesquad-compat.Po
#	source='compat.cpp' object='crimesquad-compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-compat.o `test -f 'compat.cpp' || echo '$(srcdir)/'`compat.cpp

crimesquad-compat.obj: compat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-compat.obj -MD -MP -MF $(DEPDIR)/crimesquad-compat.Tpo -c -o crimesquad-compat.obj `if test -f 'compat.cpp'; then $(CYGPATH_W) 'compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-compat.Tpo $(DEPDIR)/crimesquad-compat.Po
#	source='compat.cpp' object='crimesquad-compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-compat.obj `if test -f 'compat.cpp'; then $(CYGPATH_W) 'compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat.cpp'; fi`

crimesquad-cursesgraphics.o: cursesgraphics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cursesgraphics.o -MD -MP -MF $(DEPDIR)/crimesquad-cursesgraphics.Tpo -c -o crimesquad-cursesgraphics.o `test -f 'cursesgraphics.cpp' || echo '$(srcdir)/'`cursesgraphics.cpp
	$(am__mv) $(DEPDIR)/crimesquad-cursesgraphics.Tpo $(DEPDIR)/crimesquad-cursesgraphics.Po
#	source='cursesgraphics.cpp' object='crimesquad-cursesgraphics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cursesgraphics.o `test -f 'cursesgraphics.cpp' || echo '$(srcdir)/'`cursesgraphics.cpp

crimesquad-cursesgraphics.obj: cursesgraphics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cursesgraphics.obj -MD -MP -MF $(DEPDIR)/crimesquad-cursesgraphics.Tpo -c -o crimesquad-cursesgraphics.obj `if test -f 'cursesgraphics.cpp'; then $(CYGPATH_W) 'cursesgraphics.cpp'; else $(CYGPATH_W) '$(srcdir)/cursesgraphics.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-cursesgraphics.Tpo $(DEPDIR)/crimesquad-cursesgraphics.Po
#	source='cursesgraphics.cpp' object='crimesquad-cursesgraphics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cursesgraphics.obj `if test -f 'cursesgraphics.cpp'; then $(CYGPATH_W) 'cursesgraphics.cpp'; else $(CYGPATH_W) '$(srcdir)/cursesgraphics.cpp'; fi`

crimesquad-commondisplay.o: common/commondisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-commondisplay.o -MD -MP -MF $(DEPDIR)/crimesquad-commondisplay.Tpo -c -o crimesquad-commondisplay.o `test -f 'common/commondisplay.cpp' || echo '$(srcdir)/'`common/commondisplay.cpp
	$(am__mv) $(DEPDIR)/crimesquad-commondisplay.Tpo $(DEPDIR)/crimesquad-commondisplay.Po
#	source='common/commondisplay.cpp' object='crimesquad-commondisplay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-commondisplay.o `test -f 'common/commondisplay.cpp' || echo '$(srcdir)/'`common/commondisplay.cpp

crimesquad-commondisplay.obj: common/commondisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-commondisplay.obj -MD -MP -MF $(DEPDIR)/crimesquad-commondisplay.Tpo -c -o crimesquad-commondisplay.obj `if test -f 'common/commondisplay.cpp'; then $(CYGPATH_W) 'common/commondisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/common/commondisplay.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-commondisplay.Tpo $(DEPDIR)/crimesquad-commondisplay.Po
#	source='common/commondisplay.cpp' object='crimesquad-commondisplay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-commondisplay.obj `if test -f 'common/commondisplay.cpp'; then $(CYGPATH_W) 'common/commondisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/common/commondisplay.cpp'; fi`

crimesquad-commonactions.o: common/commonactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-commonactions.o -MD -MP -MF $(DEPDIR)/crimesquad-commonactions.Tpo -c -o crimesquad-commonactions.o `test -f 'common/commonactions.cpp' || echo '$(srcdir)/'`common/commonactions.cpp
	$(am__mv) $(DEPDIR)/crimesquad-commonactions.Tpo $(DEPDIR)/crimesquad-commonactions.Po
#	source='common/commonactions.cpp' object='crimesquad-commonactions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-commonactions.o `test -f 'common/commonactions.cpp' || echo '$(srcdir)/'`common/commonactions.cpp

crimesquad-commonactions.obj: common/commonactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-commonactions.obj -MD -MP -MF $(DEPDIR)/crimesquad-commonactions.Tpo -c -o crimesquad-commonactions.obj `if test -f 'common/commonactions.cpp'; then $(CYGPATH_W) 'common/commonactions.cpp'; else $(CYGPATH_W) '$(srcdir)/common/commonactions.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-commonactions.Tpo $(DEPDIR)/crimesquad-commonactions.Po
#	source='common/commonactions.cpp' object='crimesquad-commonactions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-commonactions.obj `if test -f 'common/commonactions.cpp'; then $(CYGPATH_W) 'common/commonactions.cpp'; else $(CYGPATH_W) '$(srcdir)/common/commonactions.cpp'; fi`

crimesquad-consolesupport.o: common/consolesupport.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-consolesupport.o -MD -MP -MF $(DEPDIR)/crimesquad-consolesupport.Tpo -c -o crimesquad-consolesupport.o `test -f 'common/consolesupport.cpp' || echo '$(srcdir)/'`common/consolesupport.cpp
	$(am__mv) $(DEPDIR)/crimesquad-consolesupport.Tpo $(DEPDIR)/crimesquad-consolesupport.Po
#	source='common/consolesupport.cpp' object='crimesquad-consolesupport.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-consolesupport.o `test -f 'common/consolesupport.cpp' || echo '$(srcdir)/'`common/consolesupport.cpp

crimesquad-consolesupport.obj: common/consolesupport.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-consolesupport.obj -MD -MP -MF $(DEPDIR)/crimesquad-consolesupport.Tpo -c -o crimesquad-consolesupport.obj `if test -f 'common/consolesupport.cpp'; then $(CYGPATH_W) 'common/consolesupport.cpp'; else $(CYGPATH_W) '$(srcdir)/common/consolesupport.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-consolesupport.Tpo $(DEPDIR)/crimesquad-consolesupport.Po
#	source='common/consolesupport.cpp' object='crimesquad-consolesupport.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-consolesupport.obj `if test -f 'common/consolesupport.cpp'; then $(CYGPATH_W) 'common/consolesupport.cpp'; else $(CYGPATH_W) '$(srcdir)/common/consolesupport.cpp'; fi`

crimesquad-getnames.o: common/getnames.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-getnames.o -MD -MP -MF $(DEPDIR)/crimesquad-getnames.Tpo -c -o crimesquad-getnames.o `test -f 'common/getnames.cpp' || echo '$(srcdir)/'`common/getnames.cpp
	$(am__mv) $(DEPDIR)/crimesquad-getnames.Tpo $(DEPDIR)/crimesquad-getnames.Po
#	source='common/getnames.cpp' object='crimesquad-getnames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-getnames.o `test -f 'common/getnames.cpp' || echo '$(srcdir)/'`common/getnames.cpp

crimesquad-getnames.obj: common/getnames.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-getnames.obj -MD -MP -MF $(DEPDIR)/crimesquad-getnames.Tpo -c -o crimesquad-getnames.obj `if test -f 'common/getnames.cpp'; then $(CYGPATH_W) 'common/getnames.cpp'; else $(CYGPATH_W) '$(srcdir)/common/getnames.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-getnames.Tpo $(DEPDIR)/crimesquad-getnames.Po
#	source='common/getnames.cpp' object='crimesquad-getnames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-getnames.obj `if test -f 'common/getnames.cpp'; then $(CYGPATH_W) 'common/getnames.cpp'; else $(CYGPATH_W) '$(srcdir)/common/getnames.cpp'; fi`

crimesquad-translateid.o: common/translateid.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-translateid.o -MD -MP -MF $(DEPDIR)/crimesquad-translateid.Tpo -c -o crimesquad-translateid.o `test -f 'common/translateid.cpp' || echo '$(srcdir)/'`common/translateid.cpp
	$(am__mv) $(DEPDIR)/crimesquad-translateid.Tpo $(DEPDIR)/crimesquad-translateid.Po
#	source='common/translateid.cpp' object='crimesquad-translateid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-translateid.o `test -f 'common/translateid.cpp' || echo '$(srcdir)/'`common/translateid.cpp

crimesquad-translateid.obj: common/translateid.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-translateid.obj -MD -MP -MF $(DEPDIR)/crimesquad-translateid.Tpo -c -o crimesquad-translateid.obj `if test -f 'common/translateid.cpp'; then $(CYGPATH_W) 'common/translateid.cpp'; else $(CYGPATH_W) '$(srcdir)/common/translateid.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-translateid.Tpo $(DEPDIR)/crimesquad-translateid.Po
#	source='common/translateid.cpp' object='crimesquad-translateid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-translateid.obj `if test -f 'common/translateid.cpp'; then $(CYGPATH_W) 'common/translateid.cpp'; else $(CYGPATH_W) '$(srcdir)/common/translateid.cpp'; fi`

crimesquad-equipment.o: common/equipment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-equipment.o -MD -MP -MF $(DEPDIR)/crimesquad-equipment.Tpo -c -o crimesquad-equipment.o `test -f 'common/equipment.cpp' || echo '$(srcdir)/'`common/equipment.cpp
	$(am__mv) $(DEPDIR)/crimesquad-equipment.Tpo $(DEPDIR)/crimesquad-equipment.Po
#	source='common/equipment.cpp' object='crimesquad-equipment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-equipment.o `test -f 'common/equipment.cpp' || echo '$(srcdir)/'`common/equipment.cpp

crimesquad-equipment.obj: common/equipment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-equipment.obj -MD -MP -MF $(DEPDIR)/crimesquad-equipment.Tpo -c -o crimesquad-equipment.obj `if test -f 'common/equipment.cpp'; then $(CYGPATH_W) 'common/equipment.cpp'; else $(CYGPATH_W) '$(srcdir)/common/equipment.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-equipment.Tpo $(DEPDIR)/crimesquad-equipment.Po
#	source='common/equipment.cpp' object='crimesquad-equipment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-equipment.obj `if test -f 'common/equipment.cpp'; then $(CYGPATH_W) 'common/equipment.cpp'; else $(CYGPATH_W) '$(srcdir)/common/equipment.cpp'; fi`

crimesquad-creature.o: creature/creature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creature.o -MD -MP -MF $(DEPDIR)/crimesquad-creature.Tpo -c -o crimesquad-creature.o `test -f 'creature/creature.cpp' || echo '$(srcdir)/'`creature/creature.cpp
	$(am__mv) $(DEPDIR)/crimesquad-creature.Tpo $(DEPDIR)/crimesquad-creature.Po
#	source='creature/creature.cpp' object='crimesquad-creature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creature.o `test -f 'creature/creature.cpp' || echo '$(srcdir)/'`creature/creature.cpp

crimesquad-creature.obj: creature/creature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creature.obj -MD -MP -MF $(DEPDIR)/crimesquad-creature.Tpo -c -o crimesquad-creature.obj `if test -f 'creature/creature.cpp'; then $(CYGPATH_W) 'creature/creature.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creature.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-creature.Tpo $(DEPDIR)/crimesquad-creature.Po
#	source='creature/creature.cpp' object='crimesquad-creature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creature.obj `if test -f 'creature/creature.cpp'; then $(CYGPATH_W) 'creature/creature.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creature.cpp'; fi`

crimesquad-titlescreen.o: title/titlescreen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-titlescreen.o -MD -MP -MF $(DEPDIR)/crimesquad-titlescreen.Tpo -c -o crimesquad-titlescreen.o `test -f 'title/titlescreen.cpp' || echo '$(srcdir)/'`title/titlescreen.cpp
	$(am__mv) $(DEPDIR)/crimesquad-titlescreen.Tpo $(DEPDIR)/crimesquad-titlescreen.Po
#	source='title/titlescreen.cpp' object='crimesquad-titlescreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-titlescreen.o `test -f 'title/titlescreen.cpp' || echo '$(srcdir)/'`title/titlescreen.cpp

crimesquad-titlescreen.obj: title/titlescreen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-titlescreen.obj -MD -MP -MF $(DEPDIR)/crimesquad-titlescreen.Tpo -c -o crimesquad-titlescreen.obj `if test -f 'title/titlescreen.cpp'; then $(CYGPATH_W) 'title/titlescreen.cpp'; else $(CYGPATH_W) '$(srcdir)/title/titlescreen.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-titlescreen.Tpo $(DEPDIR)/crimesquad-titlescreen.Po
#	source='title/titlescreen.cpp' object='crimesquad-titlescreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-titlescreen.obj `if test -f 'title/titlescreen.cpp'; then $(CYGPATH_W) 'title/titlescreen.cpp'; else $(CYGPATH_W) '$(srcdir)/title/titlescreen.cpp'; fi`

crimesquad-highscore.o: title/highscore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-highscore.o -MD -MP -MF $(DEPDIR)/crimesquad-highscore.Tpo -c -o crimesquad-highscore.o `test -f 'title/highscore.cpp' || echo '$(srcdir)/'`title/highscore.cpp
	$(am__mv) $(DEPDIR)/crimesquad-highscore.Tpo $(DEPDIR)/crimesquad-highscore.Po
#	source='title/highscore.cpp' object='crimesquad-highscore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-highscore.o `test -f 'title/highscore.cpp' || echo '$(srcdir)/'`title/highscore.cpp

crimesquad-highscore.obj: title/highscore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-highscore.obj -MD -MP -MF $(DEPDIR)/crimesquad-highscore.Tpo -c -o crimesquad-highscore.obj `if test -f 'title/highscore.cpp'; then $(CYGPATH_W) 'title/highscore.cpp'; else $(CYGPATH_W) '$(srcdir)/title/highscore.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-highscore.Tpo $(DEPDIR)/crimesquad-highscore.Po
#	source='title/highscore.cpp' object='crimesquad-highscore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-highscore.obj `if test -f 'title/highscore.cpp'; then $(CYGPATH_W) 'title/highscore.cpp'; else $(CYGPATH_W) '$(srcdir)/title/highscore.cpp'; fi`

crimesquad-newgame.o: title/newgame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-newgame.o -MD -MP -MF $(DEPDIR)/crimesquad-newgame.Tpo -c -o crimesquad-newgame.o `test -f 'title/newgame.cpp' || echo '$(srcdir)/'`title/newgame.cpp
	$(am__mv) $(DEPDIR)/crimesquad-newgame.Tpo $(DEPDIR)/crimesquad-newgame.Po
#	source='title/newgame.cpp' object='crimesquad-newgame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-newgame.o `test -f 'title/newgame.cpp' || echo '$(srcdir)/'`title/newgame.cpp

crimesquad-newgame.obj: title/newgame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-newgame.obj -MD -MP -MF $(DEPDIR)/crimesquad-newgame.Tpo -c -o crimesquad-newgame.obj `if test -f 'title/newgame.cpp'; then $(CYGPATH_W) 'title/newgame.cpp'; else $(CYGPATH_W) '$(srcdir)/title/newgame.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-newgame.Tpo $(DEPDIR)/crimesquad-newgame.Po
#	source='title/newgame.cpp' object='crimesquad-newgame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-newgame.obj `if test -f 'title/newgame.cpp'; then $(CYGPATH_W) 'title/newgame.cpp'; else $(CYGPATH_W) '$(srcdir)/title/newgame.cpp'; fi`

crimesquad-saveload.o: title/saveload.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-saveload.o -MD -MP -MF $(DEPDIR)/crimesquad-saveload.Tpo -c -o crimesquad-saveload.o `test -f 'title/saveload.cpp' || echo '$(srcdir)/'`title/saveload.cpp
	$(am__mv) $(DEPDIR)/crimesquad-saveload.Tpo $(DEPDIR)/crimesquad-saveload.Po
#	source='title/saveload.cpp' object='crimesquad-saveload.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-saveload.o `test -f 'title/saveload.cpp' || echo '$(srcdir)/'`title/saveload.cpp

crimesquad-saveload.obj: title/saveload.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-saveload.obj -MD -MP -MF $(DEPDIR)/crimesquad-saveload.Tpo -c -o crimesquad-saveload.obj `if test -f 'title/saveload.cpp'; then $(CYGPATH_W) 'title/saveload.cpp'; else $(CYGPATH_W) '$(srcdir)/title/saveload.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-saveload.Tpo $(DEPDIR)/crimesquad-saveload.Po
#	source='title/saveload.cpp' object='crimesquad-saveload.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-saveload.obj `if test -f 'title/saveload.cpp'; then $(CYGPATH_W) 'title/saveload.cpp'; else $(CYGPATH_W) '$(srcdir)/title/saveload.cpp'; fi`

crimesquad-basemode.o: basemode/basemode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-basemode.o -MD -MP -MF $(DEPDIR)/crimesquad-basemode.Tpo -c -o crimesquad-basemode.o `test -f 'basemode/basemode.cpp' || echo '$(srcdir)/'`basemode/basemode.cpp
	$(am__mv) $(DEPDIR)/crimesquad-basemode.Tpo $(DEPDIR)/crimesquad-basemode.Po
#	source='basemode/basemode.cpp' object='crimesquad-basemode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-basemode.o `test -f 'basemode/basemode.cpp' || echo '$(srcdir)/'`basemode/basemode.cpp

crimesquad-basemode.obj: basemode/basemode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-basemode.obj -MD -MP -MF $(DEPDIR)/crimesquad-basemode.Tpo -c -o crimesquad-basemode.obj `if test -f 'basemode/basemode.cpp'; then $(CYGPATH_W) 'basemode/basemode.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/basemode.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-basemode.Tpo $(DEPDIR)/crimesquad-basemode.Po
#	source='basemode/basemode.cpp' object='crimesquad-basemode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-basemode.obj `if test -f 'basemode/basemode.cpp'; then $(CYGPATH_W) 'basemode/basemode.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/basemode.cpp'; fi`

crimesquad-baseactions.o: basemode/baseactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-baseactions.o -MD -MP -MF $(DEPDIR)/crimesquad-baseactions.Tpo -c -o crimesquad-baseactions.o `test -f 'basemode/baseactions.cpp' || echo '$(srcdir)/'`basemode/baseactions.cpp
	$(am__mv) $(DEPDIR)/crimesquad-baseactions.Tpo $(DEPDIR)/crimesquad-baseactions.Po
#	source='basemode/baseactions.cpp' object='crimesquad-baseactions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-baseactions.o `test -f 'basemode/baseactions.cpp' || echo '$(srcdir)/'`basemode/baseactions.cpp

crimesquad-baseactions.obj: basemode/baseactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-baseactions.obj -MD -MP -MF $(DEPDIR)/crimesquad-baseactions.Tpo -c -o crimesquad-baseactions.obj `if test -f 'basemode/baseactions.cpp'; then $(CYGPATH_W) 'basemode/baseactions.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/baseactions.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-baseactions.Tpo $(DEPDIR)/crimesquad-baseactions.Po
#	source='basemode/baseactions.cpp' object='crimesquad-baseactions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-baseactions.obj `if test -f 'basemode/baseactions.cpp'; then $(CYGPATH_W) 'basemode/baseactions.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/baseactions.cpp'; fi`

crimesquad-activate.o: basemode/activate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activate.o -MD -MP -MF $(DEPDIR)/crimesquad-activate.Tpo -c -o crimesquad-activate.o `test -f 'basemode/activate.cpp' || echo '$(srcdir)/'`basemode/activate.cpp
	$(am__mv) $(DEPDIR)/crimesquad-activate.Tpo $(DEPDIR)/crimesquad-activate.Po
#	source='basemode/activate.cpp' object='crimesquad-activate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activate.o `test -f 'basemode/activate.cpp' || echo '$(srcdir)/'`basemode/activate.cpp

crimesquad-activate.obj: basemode/activate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activate.obj -MD -MP -MF $(DEPDIR)/crimesquad-activate.Tpo -c -o crimesquad-activate.obj `if test -f 'basemode/activate.cpp'; then $(CYGPATH_W) 'basemode/activate.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/activate.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-activate.Tpo $(DEPDIR)/crimesquad-activate.Po
#	source='basemode/activate.cpp' object='crimesquad-activate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activate.obj `if test -f 'basemode/activate.cpp'; then $(CYGPATH_W) 'basemode/activate.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/activate.cpp'; fi`

crimesquad-reviewmode.o: basemode/reviewmode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-reviewmode.o -MD -MP -MF $(DEPDIR)/crimesquad-reviewmode.Tpo -c -o crimesquad-reviewmode.o `test -f 'basemode/reviewmode.cpp' || echo '$(srcdir)/'`basemode/reviewmode.cpp
	$(am__mv) $(DEPDIR)/crimesquad-reviewmode.Tpo $(DEPDIR)/crimesquad-reviewmode.Po
#	source='basemode/reviewmode.cpp' object='crimesquad-reviewmode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-reviewmode.o `test -f 'basemode/reviewmode.cpp' || echo '$(srcdir)/'`basemode/reviewmode.cpp

crimesquad-reviewmode.obj: basemode/reviewmode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-reviewmode.obj -MD -MP -MF $(DEPDIR)/crimesquad-reviewmode.Tpo -c -o crimesquad-reviewmode.obj `if test -f 'basemode/reviewmode.cpp'; then $(CYGPATH_W) 'basemode/reviewmode.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/reviewmode.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-reviewmode.Tpo $(DEPDIR)/crimesquad-reviewmode.Po
#	source='basemode/reviewmode.cpp' object='crimesquad-reviewmode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-reviewmode.obj `if test -f 'basemode/reviewmode.cpp'; then $(CYGPATH_W) 'basemode/reviewmode.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/reviewmode.cpp'; fi`

crimesquad-advance.o: sitemode/advance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-advance.o -MD -MP -MF $(DEPDIR)/crimesquad-advance.Tpo -c -o crimesquad-advance.o `test -f 'sitemode/advance.cpp' || echo '$(srcdir)/'`sitemode/advance.cpp
	$(am__mv) $(DEPDIR)/crimesquad-advance.Tpo $(DEPDIR)/crimesquad-advance.Po
#	source='sitemode/advance.cpp' object='crimesquad-advance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-advance.o `test -f 'sitemode/advance.cpp' || echo '$(srcdir)/'`sitemode/advance.cpp

crimesquad-advance.obj: sitemode/advance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-advance.obj -MD -MP -MF $(DEPDIR)/crimesquad-advance.Tpo -c -o crimesquad-advance.obj `if test -f 'sitemode/advance.cpp'; then $(CYGPATH_W) 'sitemode/advance.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/advance.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-advance.Tpo $(DEPDIR)/crimesquad-advance.Po
#	source='sitemode/advance.cpp' object='crimesquad-advance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-advance.obj `if test -f 'sitemode/advance.cpp'; then $(CYGPATH_W) 'sitemode/advance.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/advance.cpp'; fi`

crimesquad-mapspecials.o: sitemode/mapspecials.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-mapspecials.o -MD -MP -MF $(DEPDIR)/crimesquad-mapspecials.Tpo -c -o crimesquad-mapspecials.o `test -f 'sitemode/mapspecials.cpp' || echo '$(srcdir)/'`sitemode/mapspecials.cpp
	$(am__mv) $(DEPDIR)/crimesquad-mapspecials.Tpo $(DEPDIR)/crimesquad-mapspecials.Po
#	source='sitemode/mapspecials.cpp' object='crimesquad-mapspecials.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-mapspecials.o `test -f 'sitemode/mapspecials.cpp' || echo '$(srcdir)/'`sitemode/mapspecials.cpp

crimesquad-mapspecials.obj: sitemode/mapspecials.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-mapspecials.obj -MD -MP -MF $(DEPDIR)/crimesquad-mapspecials.Tpo -c -o crimesquad-mapspecials.obj `if test -f 'sitemode/mapspecials.cpp'; then $(CYGPATH_W) 'sitemode/mapspecials.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/mapspecials.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-mapspecials.Tpo $(DEPDIR)/crimesquad-mapspecials.Po
#	source='sitemode/mapspecials.cpp' object='crimesquad-mapspecials.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-mapspecials.obj `if test -f 'sitemode/mapspecials.cpp'; then $(CYGPATH_W) 'sitemode/mapspecials.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/mapspecials.cpp'; fi`

crimesquad-newencounter.o: sitemode/newencounter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-newencounter.o -MD -MP -MF $(DEPDIR)/crimesquad-newencounter.Tpo -c -o crimesquad-newencounter.o `test -f 'sitemode/newencounter.cpp' || echo '$(srcdir)/'`sitemode/newencounter.cpp
	$(am__mv) $(DEPDIR)/crimesquad-newencounter.Tpo $(DEPDIR)/crimesquad-newencounter.Po
#	source='sitemode/newencounter.cpp' object='crimesquad-newencounter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-newencounter.o `test -f 'sitemode/newencounter.cpp' || echo '$(srcdir)/'`sitemode/newencounter.cpp

crimesquad-newencounter.obj: sitemode/newencounter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-newencounter.obj -MD -MP -MF $(DEPDIR)/crimesquad-newencounter.Tpo -c -o crimesquad-newencounter.obj `if test -f 'sitemode/newencounter.cpp'; then $(CYGPATH_W) 'sitemode/newencounter.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/newencounter.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-newencounter.Tpo $(DEPDIR)/crimesquad-newencounter.Po
#	source='sitemode/newencounter.cpp' object='crimesquad-newencounter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-newencounter.obj `if test -f 'sitemode/newencounter.cpp'; then $(CYGPATH_W) 'sitemode/newencounter.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/newencounter.cpp'; fi`

crimesquad-sitemode.o: sitemode/sitemode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitemode.o -MD -MP -MF $(DEPDIR)/crimesquad-sitemode.Tpo -c -o crimesquad-sitemode.o `test -f 'sitemode/sitemode.cpp' || echo '$(srcdir)/'`sitemode/sitemode.cpp
	$(am__mv) $(DEPDIR)/crimesquad-sitemode.Tpo $(DEPDIR)/crimesquad-sitemode.Po
#	source='sitemode/sitemode.cpp' object='crimesquad-sitemode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitemode.o `test -f 'sitemode/sitemode.cpp' || echo '$(srcdir)/'`sitemode/sitemode.cpp

crimesquad-sitemode.obj: sitemode/sitemode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitemode.obj -MD -MP -MF $(DEPDIR)/crimesquad-sitemode.Tpo -c -o crimesquad-sitemode.obj `if test -f 'sitemode/sitemode.cpp'; then $(CYGPATH_W) 'sitemode/sitemode.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitemode.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-sitemode.Tpo $(DEPDIR)/crimesquad-sitemode.Po
#	source='sitemode/sitemode.cpp' object='crimesquad-sitemode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitemode.obj `if test -f 'sitemode/sitemode.cpp'; then $(CYGPATH_W) 'sitemode/sitemode.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitemode.cpp'; fi`

crimesquad-talk.o: sitemode/talk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-talk.o -MD -MP -MF $(DEPDIR)/crimesquad-talk.Tpo -c -o crimesquad-talk.o `test -f 'sitemode/talk.cpp' || echo '$(srcdir)/'`sitemode/talk.cpp
	$(am__mv) $(DEPDIR)/crimesquad-talk.Tpo $(DEPDIR)/crimesquad-talk.Po
#	source='sitemode/talk.cpp' object='crimesquad-talk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-talk.o `test -f 'sitemode/talk.cpp' || echo '$(srcdir)/'`sitemode/talk.cpp

crimesquad-talk.obj: sitemode/talk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-talk.obj -MD -MP -MF $(DEPDIR)/crimesquad-talk.Tpo -c -o crimesquad-talk.obj `if test -f 'sitemode/talk.cpp'; then $(CYGPATH_W) 'sitemode/talk.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/talk.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-talk.Tpo $(DEPDIR)/crimesquad-talk.Po
#	source='sitemode/talk.cpp' object='crimesquad-talk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-talk.obj `if test -f 'sitemode/talk.cpp'; then $(CYGPATH_W) 'sitemode/talk.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/talk.cpp'; fi`

crimesquad-miscactions.o: sitemode/miscactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-miscactions.o -MD -MP -MF $(DEPDIR)/crimesquad-miscactions.Tpo -c -o crimesquad-miscactions.o `test -f 'sitemode/miscactions.cpp' || echo '$(srcdir)/'`sitemode/miscactions.cpp
	$(am__mv) $(DEPDIR)/crimesquad-miscactions.Tpo $(DEPDIR)/crimesquad-miscactions.Po
#	source='sitemode/miscactions.cpp' object='crimesquad-miscactions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-miscactions.o `test -f 'sitemode/miscactions.cpp' || echo '$(srcdir)/'`sitemode/miscactions.cpp

crimesquad-miscactions.obj: sitemode/miscactions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-miscactions.obj -MD -MP -MF $(DEPDIR)/crimesquad-miscactions.Tpo -c -o crimesquad-miscactions.obj `if test -f 'sitemode/miscactions.cpp'; then $(CYGPATH_W) 'sitemode/miscactions.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/miscactions.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-miscactions.Tpo $(DEPDIR)/crimesquad-miscactions.Po
#	source='sitemode/miscactions.cpp' object='crimesquad-miscactions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-miscactions.obj `if test -f 'sitemode/miscactions.cpp'; then $(CYGPATH_W) 'sitemode/miscactions.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/miscactions.cpp'; fi`

crimesquad-sitedisplay.o: sitemode/sitedisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitedisplay.o -MD -MP -MF $(DEPDIR)/crimesquad-sitedisplay.Tpo -c -o crimesquad-sitedisplay.o `test -f 'sitemode/sitedisplay.cpp' || echo '$(srcdir)/'`sitemode/sitedisplay.cpp
	$(am__mv) $(DEPDIR)/crimesquad-sitedisplay.Tpo $(DEPDIR)/crimesquad-sitedisplay.Po
#	source='sitemode/sitedisplay.cpp' object='crimesquad-sitedisplay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitedisplay.o `test -f 'sitemode/sitedisplay.cpp' || echo '$(srcdir)/'`sitemode/sitedisplay.cpp

crimesquad-sitedisplay.obj: sitemode/sitedisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitedisplay.obj -MD -MP -MF $(DEPDIR)/crimesquad-sitedisplay.Tpo -c -o crimesquad-sitedisplay.obj `if test -f 'sitemode/sitedisplay.cpp'; then $(CYGPATH_W) 'sitemode/sitedisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitedisplay.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-sitedisplay.Tpo $(DEPDIR)/crimesquad-sitedisplay.Po
#	source='sitemode/sitedisplay.cpp' object='crimesquad-sitedisplay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitedisplay.obj `if test -f 'sitemode/sitedisplay.cpp'; then $(CYGPATH_W) 'sitemode/sitedisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitedisplay.cpp'; fi`

crimesquad-stealth.o: sitemode/stealth.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-stealth.o -MD -MP -MF $(DEPDIR)/crimesquad-stealth.Tpo -c -o crimesquad-stealth.o `test -f 'sitemode/stealth.cpp' || echo '$(srcdir)/'`sitemode/stealth.cpp
	$(am__mv) $(DEPDIR)/crimesquad-stealth.Tpo $(DEPDIR)/crimesquad-stealth.Po
#	source='sitemode/stealth.cpp' object='crimesquad-stealth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-stealth.o `test -f 'sitemode/stealth.cpp' || echo '$(srcdir)/'`sitemode/stealth.cpp

crimesquad-stealth.obj: sitemode/stealth.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-stealth.obj -MD -MP -MF $(DEPDIR)/crimesquad-stealth.Tpo -c -o crimesquad-stealth.obj `if test -f 'sitemode/stealth.cpp'; then $(CYGPATH_W) 'sitemode/stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/stealth.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-stealth.Tpo $(DEPDIR)/crimesquad-stealth.Po
#	source='sitemode/stealth.cpp' object='crimesquad-stealth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-stealth.obj `if test -f 'sitemode/stealth.cpp'; then $(CYGPATH_W) 'sitemode/stealth.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/stealth.cpp'; fi`

crimesquad-chase.o: combat/chase.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-chase.o -MD -MP -MF $(DEPDIR)/crimesquad-chase.Tpo -c -o crimesquad-chase.o `test -f 'combat/chase.cpp' || echo '$(srcdir)/'`combat/chase.cpp
	$(am__mv) $(DEPDIR)/crimesquad-chase.Tpo $(DEPDIR)/crimesquad-chase.Po
#	source='combat/chase.cpp' object='crimesquad-chase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-chase.o `test -f 'combat/chase.cpp' || echo '$(srcdir)/'`combat/chase.cpp

crimesquad-chase.obj: combat/chase.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-chase.obj -MD -MP -MF $(DEPDIR)/crimesquad-chase.Tpo -c -o crimesquad-chase.obj `if test -f 'combat/chase.cpp'; then $(CYGPATH_W) 'combat/chase.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/chase.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-chase.Tpo $(DEPDIR)/crimesquad-chase.Po
#	source='combat/chase.cpp' object='crimesquad-chase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-chase.obj `if test -f 'combat/chase.cpp'; then $(CYGPATH_W) 'combat/chase.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/chase.cpp'; fi`

crimesquad-fight.o: combat/fight.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-fight.o -MD -MP -MF $(DEPDIR)/crimesquad-fight.Tpo -c -o crimesquad-fight.o `test -f 'combat/fight.cpp' || echo '$(srcdir)/'`combat/fight.cpp
	$(am__mv) $(DEPDIR)/crimesquad-fight.Tpo $(DEPDIR)/crimesquad-fight.Po
#	source='combat/fight.cpp' object='crimesquad-fight.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-fight.o `test -f 'combat/fight.cpp' || echo '$(srcdir)/'`combat/fight.cpp

crimesquad-fight.obj: combat/fight.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-fight.obj -MD -MP -MF $(DEPDIR)/crimesquad-fight.Tpo -c -o crimesquad-fight.obj `if test -f 'combat/fight.cpp'; then $(CYGPATH_W) 'combat/fight.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/fight.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-fight.Tpo $(DEPDIR)/crimesquad-fight.Po
#	source='combat/fight.cpp' object='crimesquad-fight.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-fight.obj `if test -f 'combat/fight.cpp'; then $(CYGPATH_W) 'combat/fight.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/fight.cpp'; fi`

crimesquad-haulkidnap.o: combat/haulkidnap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-haulkidnap.o -MD -MP -MF $(DEPDIR)/crimesquad-haulkidnap.Tpo -c -o crimesquad-haulkidnap.o `test -f 'combat/haulkidnap.cpp' || echo '$(srcdir)/'`combat/haulkidnap.cpp
	$(am__mv) $(DEPDIR)/crimesquad-haulkidnap.Tpo $(DEPDIR)/crimesquad-haulkidnap.Po
#	source='combat/haulkidnap.cpp' object='crimesquad-haulkidnap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-haulkidnap.o `test -f 'combat/haulkidnap.cpp' || echo '$(srcdir)/'`combat/haulkidnap.cpp

crimesquad-haulkidnap.obj: combat/haulkidnap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-haulkidnap.obj -MD -MP -MF $(DEPDIR)/crimesquad-haulkidnap.Tpo -c -o crimesquad-haulkidnap.obj `if test -f 'combat/haulkidnap.cpp'; then $(CYGPATH_W) 'combat/haulkidnap.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/haulkidnap.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-haulkidnap.Tpo $(DEPDIR)/crimesquad-haulkidnap.Po
#	source='combat/haulkidnap.cpp' object='crimesquad-haulkidnap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-haulkidnap.obj `if test -f 'combat/haulkidnap.cpp'; then $(CYGPATH_W) 'combat/haulkidnap.cpp'; else $(CYGPATH_W) '$(srcdir)/combat/haulkidnap.cpp'; fi`

crimesquad-activities.o: daily/activities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activities.o -MD -MP -MF $(DEPDIR)/crimesquad-activities.Tpo -c -o crimesquad-activities.o `test -f 'daily/activities.cpp' || echo '$(srcdir)/'`daily/activities.cpp
	$(am__mv) $(DEPDIR)/crimesquad-activities.Tpo $(DEPDIR)/crimesquad-activities.Po
#	source='daily/activities.cpp' object='crimesquad-activities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activities.o `test -f 'daily/activities.cpp' || echo '$(srcdir)/'`daily/activities.cpp

crimesquad-activities.obj: daily/activities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activities.obj -MD -MP -MF $(DEPDIR)/crimesquad-activities.Tpo -c -o crimesquad-activities.obj `if test -f 'daily/activities.cpp'; then $(CYGPATH_W) 'daily/activities.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/activities.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-activities.Tpo $(DEPDIR)/crimesquad-activities.Po
#	source='daily/activities.cpp' object='crimesquad-activities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activities.obj `if test -f 'daily/activities.cpp'; then $(CYGPATH_W) 'daily/activities.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/activities.cpp'; fi`

crimesquad-daily.o: daily/daily.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-daily.o -MD -MP -MF $(DEPDIR)/crimesquad-daily.Tpo -c -o crimesquad-daily.o `test -f 'daily/daily.cpp' || echo '$(srcdir)/'`daily/daily.cpp
	$(am__mv) $(DEPDIR)/crimesquad-daily.Tpo $(DEPDIR)/crimesquad-daily.Po
#	source='daily/daily.cpp' object='crimesquad-daily.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-daily.o `test -f 'daily/daily.cpp' || echo '$(srcdir)/'`daily/daily.cpp

crimesquad-daily.obj: daily/daily.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-daily.obj -MD -MP -MF $(DEPDIR)/crimesquad-daily.Tpo -c -o crimesquad-daily.obj `if test -f 'daily/daily.cpp'; then $(CYGPATH_W) 'daily/daily.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/daily.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-daily.Tpo $(DEPDIR)/crimesquad-daily.Po
#	source='daily/daily.cpp' object='crimesquad-daily.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-daily.obj `if test -f 'daily/daily.cpp'; then $(CYGPATH_W) 'daily/daily.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/daily.cpp'; fi`

crimesquad-date.o: daily/date.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-date.o -MD -MP -MF $(DEPDIR)/crimesquad-date.Tpo -c -o crimesquad-date.o `test -f 'daily/date.cpp' || echo '$(srcdir)/'`daily/date.cpp
	$(am__mv) $(DEPDIR)/crimesquad-date.Tpo $(DEPDIR)/crimesquad-date.Po
#	source='daily/date.cpp' object='crimesquad-date.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-date.o `test -f 'daily/date.cpp' || echo '$(srcdir)/'`daily/date.cpp

crimesquad-date.obj: daily/date.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-date.obj -MD -MP -MF $(DEPDIR)/crimesquad-date.Tpo -c -o crimesquad-date.obj `if test -f 'daily/date.cpp'; then $(CYGPATH_W) 'daily/date.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/date.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-date.Tpo $(DEPDIR)/crimesquad-date.Po
#	source='daily/date.cpp' object='crimesquad-date.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-date.obj `if test -f 'daily/date.cpp'; then $(CYGPATH_W) 'daily/date.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/date.cpp'; fi`

crimesquad-news.o: daily/news.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-news.o -MD -MP -MF $(DEPDIR)/crimesquad-news.Tpo -c -o crimesquad-news.o `test -f 'daily/news.cpp' || echo '$(srcdir)/'`daily/news.cpp
	$(am__mv) $(DEPDIR)/crimesquad-news.Tpo $(DEPDIR)/crimesquad-news.Po
#	source='daily/news.cpp' object='crimesquad-news.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-news.o `test -f 'daily/news.cpp' || echo '$(srcdir)/'`daily/news.cpp

crimesquad-news.obj: daily/news.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-news.obj -MD -MP -MF $(DEPDIR)/crimesquad-news.Tpo -c -o crimesquad-news.obj `if test -f 'daily/news.cpp'; then $(CYGPATH_W) 'daily/news.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/news.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-news.Tpo $(DEPDIR)/crimesquad-news.Po
#	source='daily/news.cpp' object='crimesquad-news.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-news.obj `if test -f 'daily/news.cpp'; then $(CYGPATH_W) 'daily/news.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/news.cpp'; fi`

crimesquad-shopsnstuff.o: daily/shopsnstuff.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-shopsnstuff.o -MD -MP -MF $(DEPDIR)/crimesquad-shopsnstuff.Tpo -c -o crimesquad-shopsnstuff.o `test -f 'daily/shopsnstuff.cpp' || echo '$(srcdir)/'`daily/shopsnstuff.cpp
	$(am__mv) $(DEPDIR)/crimesquad-shopsnstuff.Tpo $(DEPDIR)/crimesquad-shopsnstuff.Po
#	source='daily/shopsnstuff.cpp' object='crimesquad-shopsnstuff.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-shopsnstuff.o `test -f 'daily/shopsnstuff.cpp' || echo '$(srcdir)/'`daily/shopsnstuff.cpp

crimesquad-shopsnstuff.obj: daily/shopsnstuff.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-shopsnstuff.obj -MD -MP -MF $(DEPDIR)/crimesquad-shopsnstuff.Tpo -c -o crimesquad-shopsnstuff.obj `if test -f 'daily/shopsnstuff.cpp'; then $(CYGPATH_W) 'daily/shopsnstuff.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/shopsnstuff.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-shopsnstuff.Tpo $(DEPDIR)/crimesquad-shopsnstuff.Po
#	source='daily/shopsnstuff.cpp' object='crimesquad-shopsnstuff.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-shopsnstuff.obj `if test -f 'daily/shopsnstuff.cpp'; then $(CYGPATH_W) 'daily/shopsnstuff.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/shopsnstuff.cpp'; fi`

crimesquad-siege.o: daily/siege.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-siege.o -MD -MP -MF $(DEPDIR)/crimesquad-siege.Tpo -c -o crimesquad-siege.o `test -f 'daily/siege.cpp' || echo '$(srcdir)/'`daily/siege.cpp
	$(am__mv) $(DEPDIR)/crimesquad-siege.Tpo $(DEPDIR)/crimesquad-siege.Po
#	source='daily/siege.cpp' object='crimesquad-siege.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-siege.o `test -f 'daily/siege.cpp' || echo '$(srcdir)/'`daily/siege.cpp

crimesquad-siege.obj: daily/siege.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-siege.obj -MD -MP -MF $(DEPDIR)/crimesquad-siege.Tpo -c -o crimesquad-siege.obj `if test -f 'daily/siege.cpp'; then $(CYGPATH_W) 'daily/siege.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/siege.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-siege.Tpo $(DEPDIR)/crimesquad-siege.Po
#	source='daily/siege.cpp' object='crimesquad-siege.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-siege.obj `if test -f 'daily/siege.cpp'; then $(CYGPATH_W) 'daily/siege.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/siege.cpp'; fi`

crimesquad-endgame.o: monthly/endgame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-endgame.o -MD -MP -MF $(DEPDIR)/crimesquad-endgame.Tpo -c -o crimesquad-endgame.o `test -f 'monthly/endgame.cpp' || echo '$(srcdir)/'`monthly/endgame.cpp
	$(am__mv) $(DEPDIR)/crimesquad-endgame.Tpo $(DEPDIR)/crimesquad-endgame.Po
#	source='monthly/endgame.cpp' object='crimesquad-endgame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-endgame.o `test -f 'monthly/endgame.cpp' || echo '$(srcdir)/'`monthly/endgame.cpp

crimesquad-endgame.obj: monthly/endgame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-endgame.obj -MD -MP -MF $(DEPDIR)/crimesquad-endgame.Tpo -c -o crimesquad-endgame.obj `if test -f 'monthly/endgame.cpp'; then $(CYGPATH_W) 'monthly/endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/endgame.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-endgame.Tpo $(DEPDIR)/crimesquad-endgame.Po
#	source='monthly/endgame.cpp' object='crimesquad-endgame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-endgame.obj `if test -f 'monthly/endgame.cpp'; then $(CYGPATH_W) 'monthly/endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/endgame.cpp'; fi`

crimesquad-justice.o: monthly/justice.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-justice.o -MD -MP -MF $(DEPDIR)/crimesquad-justice.Tpo -c -o crimesquad-justice.o `test -f 'monthly/justice.cpp' || echo '$(srcdir)/'`monthly/justice.cpp
	$(am__mv) $(DEPDIR)/crimesquad-justice.Tpo $(DEPDIR)/crimesquad-justice.Po
#	source='monthly/justice.cpp' object='crimesquad-justice.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-justice.o `test -f 'monthly/justice.cpp' || echo '$(srcdir)/'`monthly/justice.cpp

crimesquad-justice.obj: monthly/justice.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-justice.obj -MD -MP -MF $(DEPDIR)/crimesquad-justice.Tpo -c -o crimesquad-justice.obj `if test -f 'monthly/justice.cpp'; then $(CYGPATH_W) 'monthly/justice.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/justice.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-justice.Tpo $(DEPDIR)/crimesquad-justice.Po
#	source='monthly/justice.cpp' object='crimesquad-justice.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-justice.obj `if test -f 'monthly/justice.cpp'; then $(CYGPATH_W) 'monthly/justice.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/justice.cpp'; fi`

crimesquad-lcsmonthly.o: monthly/lcsmonthly.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-lcsmonthly.o -MD -MP -MF $(DEPDIR)/crimesquad-lcsmonthly.Tpo -c -o crimesquad-lcsmonthly.o `test -f 'monthly/lcsmonthly.cpp' || echo '$(srcdir)/'`monthly/lcsmonthly.cpp
	$(am__mv) $(DEPDIR)/crimesquad-lcsmonthly.Tpo $(DEPDIR)/crimesquad-lcsmonthly.Po
#	source='monthly/lcsmonthly.cpp' object='crimesquad-lcsmonthly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-lcsmonthly.o `test -f 'monthly/lcsmonthly.cpp' || echo '$(srcdir)/'`monthly/lcsmonthly.cpp

crimesquad-lcsmonthly.obj: monthly/lcsmonthly.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-lcsmonthly.obj -MD -MP -MF $(DEPDIR)/crimesquad-lcsmonthly.Tpo -c -o crimesquad-lcsmonthly.obj `if test -f 'monthly/lcsmonthly.cpp'; then $(CYGPATH_W) 'monthly/lcsmonthly.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/lcsmonthly.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-lcsmonthly.Tpo $(DEPDIR)/crimesquad-lcsmonthly.Po
#	source='monthly/lcsmonthly.cpp' object='crimesquad-lcsmonthly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-lcsmonthly.obj `if test -f 'monthly/lcsmonthly.cpp'; then $(CYGPATH_W) 'monthly/lcsmonthly.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/lcsmonthly.cpp'; fi`

crimesquad-monthly.o: monthly/monthly.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-monthly.o -MD -MP -MF $(DEPDIR)/crimesquad-monthly.Tpo -c -o crimesquad-monthly.o `test -f 'monthly/monthly.cpp' || echo '$(srcdir)/'`monthly/monthly.cpp
	$(am__mv) $(DEPDIR)/crimesquad-monthly.Tpo $(DEPDIR)/crimesquad-monthly.Po
#	source='monthly/monthly.cpp' object='crimesquad-monthly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-monthly.o `test -f 'monthly/monthly.cpp' || echo '$(srcdir)/'`monthly/monthly.cpp

crimesquad-monthly.obj: monthly/monthly.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-monthly.obj -MD -MP -MF $(DEPDIR)/crimesquad-monthly.Tpo -c -o crimesquad-monthly.obj `if test -f 'monthly/monthly.cpp'; then $(CYGPATH_W) 'monthly/monthly.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/monthly.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-monthly.Tpo $(DEPDIR)/crimesquad-monthly.Po
#	source='monthly/monthly.cpp' object='crimesquad-monthly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-monthly.obj `if test -f 'monthly/monthly.cpp'; then $(CYGPATH_W) 'monthly/monthly.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/monthly.cpp'; fi`

crimesquad-politics.o: politics/politics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-politics.o -MD -MP -MF $(DEPDIR)/crimesquad-politics.Tpo -c -o crimesquad-politics.o `test -f 'politics/politics.cpp' || echo '$(srcdir)/'`politics/politics.cpp
	$(am__mv) $(DEPDIR)/crimesquad-politics.Tpo $(DEPDIR)/crimesquad-politics.Po
#	source='politics/politics.cpp' object='crimesquad-politics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-politics.o `test -f 'politics/politics.cpp' || echo '$(srcdir)/'`politics/politics.cpp

crimesquad-politics.obj: politics/politics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-politics.obj -MD -MP -MF $(DEPDIR)/crimesquad-politics.Tpo -c -o crimesquad-politics.obj `if test -f 'politics/politics.cpp'; then $(CYGPATH_W) 'politics/politics.cpp'; else $(CYGPATH_W) '$(srcdir)/politics/politics.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-politics.Tpo $(DEPDIR)/crimesquad-politics.Po
#	source='politics/politics.cpp' object='crimesquad-politics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-politics.obj `if test -f 'politics/politics.cpp'; then $(CYGPATH_W) 'politics/politics.cpp'; else $(CYGPATH_W) '$(srcdir)/politics/politics.cpp'; fi`

crimesquad-interrogation.o: daily/interrogation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-interrogation.o -MD -MP -MF $(DEPDIR)/crimesquad-interrogation.Tpo -c -o crimesquad-interrogation.o `test -f 'daily/interrogation.cpp' || echo '$(srcdir)/'`daily/interrogation.cpp
	$(am__mv) $(DEPDIR)/crimesquad-interrogation.Tpo $(DEPDIR)/crimesquad-interrogation.Po
#	source='daily/interrogation.cpp' object='crimesquad-interrogation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-interrogation.o `test -f 'daily/interrogation.cpp' || echo '$(srcdir)/'`daily/interrogation.cpp

crimesquad-interrogation.obj: daily/interrogation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-interrogation.obj -MD -MP -MF $(DEPDIR)/crimesquad-interrogation.Tpo -c -o crimesquad-interrogation.obj `if test -f 'daily/interrogation.cpp'; then $(CYGPATH_W) 'daily/interrogation.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/interrogation.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-interrogation.Tpo $(DEPDIR)/crimesquad-interrogation.Po
#	source='daily/interrogation.cpp' object='crimesquad-interrogation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-interrogation.obj `if test -f 'daily/interrogation.cpp'; then $(CYGPATH_W) 'daily/interrogation.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/interrogation.cpp'; fi`

crimesquad-recruit.o: daily/recruit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-recruit.o -MD -MP -MF $(DEPDIR)/crimesquad-recruit.Tpo -c -o crimesquad-recruit.o `test -f 'daily/recruit.cpp' || echo '$(srcdir)/'`daily/recruit.cpp
	$(am__mv) $(DEPDIR)/crimesquad-recruit.Tpo $(DEPDIR)/crimesquad-recruit.Po
#	source='daily/recruit.cpp' object='crimesquad-recruit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-recruit.o `test -f 'daily/recruit.cpp' || echo '$(srcdir)/'`daily/recruit.cpp

crimesquad-recruit.obj: daily/recruit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-recruit.obj -MD -MP -MF $(DEPDIR)/crimesquad-recruit.Tpo -c -o crimesquad-recruit.obj `if test -f 'daily/recruit.cpp'; then $(CYGPATH_W) 'daily/recruit.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/recruit.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-recruit.Tpo $(DEPDIR)/crimesquad-recruit.Po
#	source='daily/recruit.cpp' object='crimesquad-recruit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-recruit.obj `if test -f 'daily/recruit.cpp'; then $(CYGPATH_W) 'daily/recruit.cpp'; else $(CYGPATH_W) '$(srcdir)/daily/recruit.cpp'; fi`

crimesquad-law.o: politics/law.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-law.o -MD -MP -MF $(DEPDIR)/crimesquad-law.Tpo -c -o crimesquad-law.o `test -f 'politics/law.cpp' || echo '$(srcdir)/'`politics/law.cpp
	$(am__mv) $(DEPDIR)/crimesquad-law.Tpo $(DEPDIR)/crimesquad-law.Po
#	source='politics/law.cpp' object='crimesquad-law.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-law.o `test -f 'politics/law.cpp' || echo '$(srcdir)/'`politics/law.cpp

crimesquad-law.obj: politics/law.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-law.obj -MD -MP -MF $(DEPDIR)/crimesquad-law.Tpo -c -o crimesquad-law.obj `if test -f 'politics/law.cpp'; then $(CYGPATH_W) 'politics/law.cpp'; else $(CYGPATH_W) '$(srcdir)/politics/law.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-law.Tpo $(DEPDIR)/crimesquad-law.Po
#	source='politics/law.cpp' object='crimesquad-law.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-law.obj `if test -f 'politics/law.cpp'; then $(CYGPATH_W) 'politics/law.cpp'; else $(CYGPATH_W) '$(srcdir)/politics/law.cpp'; fi`

crimesquad-configfile.o: configfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-configfile.o -MD -MP -MF $(DEPDIR)/crimesquad-configfile.Tpo -c -o crimesquad-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp
	$(am__mv) $(DEPDIR)/crimesquad-configfile.Tpo $(DEPDIR)/crimesquad-configfile.Po
#	source='configfile.cpp' object='crimesquad-configfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp

crimesquad-configfile.obj: configfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-configfile.obj -MD -MP -MF $(DEPDIR)/crimesquad-configfile.Tpo -c -o crimesquad-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-configfile.Tpo $(DEPDIR)/crimesquad-configfile.Po
#	source='configfile.cpp' object='crimesquad-configfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`

crimesquad-ads.o: news/ads.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-ads.o -MD -MP -MF $(DEPDIR)/crimesquad-ads.Tpo -c -o crimesquad-ads.o `test -f 'news/ads.cpp' || echo '$(srcdir)/'`news/ads.cpp
	$(am__mv) $(DEPDIR)/crimesquad-ads.Tpo $(DEPDIR)/crimesquad-ads.Po
#	source='news/ads.cpp' object='crimesquad-ads.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-ads.o `test -f 'news/ads.cpp' || echo '$(srcdir)/'`news/ads.cpp

crimesquad-ads.obj: news/ads.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-ads.obj -MD -MP -MF $(DEPDIR)/crimesquad-ads.Tpo -c -o crimesquad-ads.obj `if test -f 'news/ads.cpp'; then $(CYGPATH_W) 'news/ads.cpp'; else $(CYGPATH_W) '$(srcdir)/news/ads.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-ads.Tpo $(DEPDIR)/crimesquad-ads.Po
#	source='news/ads.cpp' object='crimesquad-ads.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-ads.obj `if test -f 'news/ads.cpp'; then $(CYGPATH_W) 'news/ads.cpp'; else $(CYGPATH_W) '$(srcdir)/news/ads.cpp'; fi`

crimesquad-headline.o: news/headline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-headline.o -MD -MP -MF $(DEPDIR)/crimesquad-headline.Tpo -c -o crimesquad-headline.o `test -f 'news/headline.cpp' || echo '$(srcdir)/'`news/headline.cpp
	$(am__mv) $(DEPDIR)/crimesquad-headline.Tpo $(DEPDIR)/crimesquad-headline.Po
#	source='news/headline.cpp' object='crimesquad-headline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-headline.o `test -f 'news/headline.cpp' || echo '$(srcdir)/'`news/headline.cpp

crimesquad-headline.obj: news/headline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-headline.obj -MD -MP -MF $(DEPDIR)/crimesquad-headline.Tpo -c -o crimesquad-headline.obj `if test -f 'news/headline.cpp'; then $(CYGPATH_W) 'news/headline.cpp'; else $(CYGPATH_W) '$(srcdir)/news/headline.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-headline.Tpo $(DEPDIR)/crimesquad-headline.Po
#	source='news/headline.cpp' object='crimesquad-headline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-headline.obj `if test -f 'news/headline.cpp'; then $(CYGPATH_W) 'news/headline.cpp'; else $(CYGPATH_W) '$(srcdir)/news/headline.cpp'; fi`

crimesquad-layout.o: news/layout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-layout.o -MD -MP -MF $(DEPDIR)/crimesquad-layout.Tpo -c -o crimesquad-layout.o `test -f 'news/layout.cpp' || echo '$(srcdir)/'`news/layout.cpp
	$(am__mv) $(DEPDIR)/crimesquad-layout.Tpo $(DEPDIR)/crimesquad-layout.Po
#	source='news/layout.cpp' object='crimesquad-layout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-layout.o `test -f 'news/layout.cpp' || echo '$(srcdir)/'`news/layout.cpp

crimesquad-layout.obj: news/layout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-layout.obj -MD -MP -MF $(DEPDIR)/crimesquad-layout.Tpo -c -o crimesquad-layout.obj `if test -f 'news/layout.cpp'; then $(CYGPATH_W) 'news/layout.cpp'; else $(CYGPATH_W) '$(srcdir)/news/layout.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-layout.Tpo $(DEPDIR)/crimesquad-layout.Po
#	source='news/layout.cpp' object='crimesquad-layout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-layout.obj `if test -f 'news/layout.cpp'; then $(CYGPATH_W) 'news/layout.cpp'; else $(CYGPATH_W) '$(srcdir)/news/layout.cpp'; fi`

crimesquad-majorevent.o: news/majorevent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-majorevent.o -MD -MP -MF $(DEPDIR)/crimesquad-majorevent.Tpo -c -o crimesquad-majorevent.o `test -f 'news/majorevent.cpp' || echo '$(srcdir)/'`news/majorevent.cpp
	$(am__mv) $(DEPDIR)/crimesquad-majorevent.Tpo $(DEPDIR)/crimesquad-majorevent.Po
#	source='news/majorevent.cpp' object='crimesquad-majorevent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-majorevent.o `test -f 'news/majorevent.cpp' || echo '$(srcdir)/'`news/majorevent.cpp

crimesquad-majorevent.obj: news/majorevent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-majorevent.obj -MD -MP -MF $(DEPDIR)/crimesquad-majorevent.Tpo -c -o crimesquad-majorevent.obj `if test -f 'news/majorevent.cpp'; then $(CYGPATH_W) 'news/majorevent.cpp'; else $(CYGPATH_W) '$(srcdir)/news/majorevent.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-majorevent.Tpo $(DEPDIR)/crimesquad-majorevent.Po
#	source='news/majorevent.cpp' object='crimesquad-majorevent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-majorevent.obj `if test -f 'news/majorevent.cpp'; then $(CYGPATH_W) 'news/majorevent.cpp'; else $(CYGPATH_W) '$(srcdir)/news/majorevent.cpp'; fi`

crimesquad-squadstory_text.o: news/squadstory_text.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-squadstory_text.o -MD -MP -MF $(DEPDIR)/crimesquad-squadstory_text.Tpo -c -o crimesquad-squadstory_text.o `test -f 'news/squadstory_text.cpp' || echo '$(srcdir)/'`news/squadstory_text.cpp
	$(am__mv) $(DEPDIR)/crimesquad-squadstory_text.Tpo $(DEPDIR)/crimesquad-squadstory_text.Po
#	source='news/squadstory_text.cpp' object='crimesquad-squadstory_text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-squadstory_text.o `test -f 'news/squadstory_text.cpp' || echo '$(srcdir)/'`news/squadstory_text.cpp

crimesquad-squadstory_text.obj: news/squadstory_text.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-squadstory_text.obj -MD -MP -MF $(DEPDIR)/crimesquad-squadstory_text.Tpo -c -o crimesquad-squadstory_text.obj `if test -f 'news/squadstory_text.cpp'; then $(CYGPATH_W) 'news/squadstory_text.cpp'; else $(CYGPATH_W) '$(srcdir)/news/squadstory_text.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-squadstory_text.Tpo $(DEPDIR)/crimesquad-squadstory_text.Po
#	source='news/squadstory_text.cpp' object='crimesquad-squadstory_text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-squadstory_text.obj `if test -f 'news/squadstory_text.cpp'; then $(CYGPATH_W) 'news/squadstory_text.cpp'; else $(CYGPATH_W) '$(srcdir)/news/squadstory_text.cpp'; fi`

crimesquad-sitemap.o: sitemode/sitemap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitemap.o -MD -MP -MF $(DEPDIR)/crimesquad-sitemap.Tpo -c -o crimesquad-sitemap.o `test -f 'sitemode/sitemap.cpp' || echo '$(srcdir)/'`sitemode/sitemap.cpp
	$(am__mv) $(DEPDIR)/crimesquad-sitemap.Tpo $(DEPDIR)/crimesquad-sitemap.Po
#	source='sitemode/sitemap.cpp' object='crimesquad-sitemap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitemap.o `test -f 'sitemode/sitemap.cpp' || echo '$(srcdir)/'`sitemode/sitemap.cpp

crimesquad-sitemap.obj: sitemode/sitemap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sitemap.obj -MD -MP -MF $(DEPDIR)/crimesquad-sitemap.Tpo -c -o crimesquad-sitemap.obj `if test -f 'sitemode/sitemap.cpp'; then $(CYGPATH_W) 'sitemode/sitemap.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitemap.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-sitemap.Tpo $(DEPDIR)/crimesquad-sitemap.Po
#	source='sitemode/sitemap.cpp' object='crimesquad-sitemap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sitemap.obj `if test -f 'sitemode/sitemap.cpp'; then $(CYGPATH_W) 'sitemode/sitemap.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/sitemap.cpp'; fi`

crimesquad-location.o: location.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-location.o -MD -MP -MF $(DEPDIR)/crimesquad-location.Tpo -c -o crimesquad-location.o `test -f 'location.cpp' || echo '$(srcdir)/'`location.cpp
	$(am__mv) $(DEPDIR)/crimesquad-location.Tpo $(DEPDIR)/crimesquad-location.Po
#	source='location.cpp' object='crimesquad-location.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-location.o `test -f 'location.cpp' || echo '$(srcdir)/'`location.cpp

crimesquad-location.obj: location.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-location.obj -MD -MP -MF $(DEPDIR)/crimesquad-location.Tpo -c -o crimesquad-location.obj `if test -f 'location.cpp'; then $(CYGPATH_W) 'location.cpp'; else $(CYGPATH_W) '$(srcdir)/location.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-location.Tpo $(DEPDIR)/crimesquad-location.Po
#	source='location.cpp' object='crimesquad-location.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-location.obj `if test -f 'location.cpp'; then $(CYGPATH_W) 'location.cpp'; else $(CYGPATH_W) '$(srcdir)/location.cpp'; fi`

crimesquad-locationdef.o: locationdef.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-locationdef.o -MD -MP -MF $(DEPDIR)/crimesquad-locationdef.Tpo -c -o crimesquad-locationdef.o `test -f 'locationdef.cpp' || echo '$(srcdir)/'`locationdef.cpp
	$(am__mv) $(DEPDIR)/crimesquad-locationdef.Tpo $(DEPDIR)/crimesquad-locationdef.Po
#	source='locationdef.cpp' object='crimesquad-locationdef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-locationdef.o `test -f 'locationdef.cpp' || echo '$(srcdir)/'`locationdef.cpp

crimesquad-locationdef.obj: locationdef.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-locationdef.obj -MD -MP -MF $(DEPDIR)/crimesquad-locationdef.Tpo -c -o crimesquad-locationdef.obj `if test -f 'locationdef.cpp'; then $(CYGPATH_W) 'locationdef.cpp'; else $(CYGPATH_W) '$(srcdir)/locationdef.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-locationdef.Tpo $(DEPDIR)/crimesquad-locationdef.Po
#	source='locationdef.cpp' object='crimesquad-locationdef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-locationdef.obj `if test -f 'locationdef.cpp'; then $(CYGPATH_W) 'locationdef.cpp'; else $(CYGPATH_W) '$(srcdir)/locationdef.cpp'; fi`

crimesquad-activate_sleepers.o: basemode/activate_sleepers.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activate_sleepers.o -MD -MP -MF $(DEPDIR)/crimesquad-activate_sleepers.Tpo -c -o crimesquad-activate_sleepers.o `test -f 'basemode/activate_sleepers.cpp' || echo '$(srcdir)/'`basemode/activate_sleepers.cpp
	$(am__mv) $(DEPDIR)/crimesquad-activate_sleepers.Tpo $(DEPDIR)/crimesquad-activate_sleepers.Po
#	source='basemode/activate_sleepers.cpp' object='crimesquad-activate_sleepers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activate_sleepers.o `test -f 'basemode/activate_sleepers.cpp' || echo '$(srcdir)/'`basemode/activate_sleepers.cpp

crimesquad-activate_sleepers.obj: basemode/activate_sleepers.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-activate_sleepers.obj -MD -MP -MF $(DEPDIR)/crimesquad-activate_sleepers.Tpo -c -o crimesquad-activate_sleepers.obj `if test -f 'basemode/activate_sleepers.cpp'; then $(CYGPATH_W) 'basemode/activate_sleepers.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/activate_sleepers.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-activate_sleepers.Tpo $(DEPDIR)/crimesquad-activate_sleepers.Po
#	source='basemode/activate_sleepers.cpp' object='crimesquad-activate_sleepers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-activate_sleepers.obj `if test -f 'basemode/activate_sleepers.cpp'; then $(CYGPATH_W) 'basemode/activate_sleepers.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/activate_sleepers.cpp'; fi`

crimesquad-sleeper_update.o: monthly/sleeper_update.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sleeper_update.o -MD -MP -MF $(DEPDIR)/crimesquad-sleeper_update.Tpo -c -o crimesquad-sleeper_update.o `test -f 'monthly/sleeper_update.cpp' || echo '$(srcdir)/'`monthly/sleeper_update.cpp
	$(am__mv) $(DEPDIR)/crimesquad-sleeper_update.Tpo $(DEPDIR)/crimesquad-sleeper_update.Po
#	source='monthly/sleeper_update.cpp' object='crimesquad-sleeper_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sleeper_update.o `test -f 'monthly/sleeper_update.cpp' || echo '$(srcdir)/'`monthly/sleeper_update.cpp

crimesquad-sleeper_update.obj: monthly/sleeper_update.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-sleeper_update.obj -MD -MP -MF $(DEPDIR)/crimesquad-sleeper_update.Tpo -c -o crimesquad-sleeper_update.obj `if test -f 'monthly/sleeper_update.cpp'; then $(CYGPATH_W) 'monthly/sleeper_update.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/sleeper_update.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-sleeper_update.Tpo $(DEPDIR)/crimesquad-sleeper_update.Po
#	source='monthly/sleeper_update.cpp' object='crimesquad-sleeper_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-sleeper_update.obj `if test -f 'monthly/sleeper_update.cpp'; then $(CYGPATH_W) 'monthly/sleeper_update.cpp'; else $(CYGPATH_W) '$(srcdir)/monthly/sleeper_update.cpp'; fi`

crimesquad-armor.o: items/armor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-armor.o -MD -MP -MF $(DEPDIR)/crimesquad-armor.Tpo -c -o crimesquad-armor.o `test -f 'items/armor.cpp' || echo '$(srcdir)/'`items/armor.cpp
	$(am__mv) $(DEPDIR)/crimesquad-armor.Tpo $(DEPDIR)/crimesquad-armor.Po
#	source='items/armor.cpp' object='crimesquad-armor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-armor.o `test -f 'items/armor.cpp' || echo '$(srcdir)/'`items/armor.cpp

crimesquad-armor.obj: items/armor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-armor.obj -MD -MP -MF $(DEPDIR)/crimesquad-armor.Tpo -c -o crimesquad-armor.obj `if test -f 'items/armor.cpp'; then $(CYGPATH_W) 'items/armor.cpp'; else $(CYGPATH_W) '$(srcdir)/items/armor.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-armor.Tpo $(DEPDIR)/crimesquad-armor.Po
#	source='items/armor.cpp' object='crimesquad-armor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-armor.obj `if test -f 'items/armor.cpp'; then $(CYGPATH_W) 'items/armor.cpp'; else $(CYGPATH_W) '$(srcdir)/items/armor.cpp'; fi`

crimesquad-creaturetypes.o: creature/creaturetypes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creaturetypes.o -MD -MP -MF $(DEPDIR)/crimesquad-creaturetypes.Tpo -c -o crimesquad-creaturetypes.o `test -f 'creature/creaturetypes.cpp' || echo '$(srcdir)/'`creature/creaturetypes.cpp
	$(am__mv) $(DEPDIR)/crimesquad-creaturetypes.Tpo $(DEPDIR)/crimesquad-creaturetypes.Po
#	source='creature/creaturetypes.cpp' object='crimesquad-creaturetypes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creaturetypes.o `test -f 'creature/creaturetypes.cpp' || echo '$(srcdir)/'`creature/creaturetypes.cpp

crimesquad-creaturetypes.obj: creature/creaturetypes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creaturetypes.obj -MD -MP -MF $(DEPDIR)/crimesquad-creaturetypes.Tpo -c -o crimesquad-creaturetypes.obj `if test -f 'creature/creaturetypes.cpp'; then $(CYGPATH_W) 'creature/creaturetypes.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creaturetypes.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-creaturetypes.Tpo $(DEPDIR)/crimesquad-creaturetypes.Po
#	source='creature/creaturetypes.cpp' object='crimesquad-creaturetypes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creaturetypes.obj `if test -f 'creature/creaturetypes.cpp'; then $(CYGPATH_W) 'creature/creaturetypes.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creaturetypes.cpp'; fi`

crimesquad-liberalagenda.o: basemode/liberalagenda.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-liberalagenda.o -MD -MP -MF $(DEPDIR)/crimesquad-liberalagenda.Tpo -c -o crimesquad-liberalagenda.o `test -f 'basemode/liberalagenda.cpp' || echo '$(srcdir)/'`basemode/liberalagenda.cpp
	$(am__mv) $(DEPDIR)/crimesquad-liberalagenda.Tpo $(DEPDIR)/crimesquad-liberalagenda.Po
#	source='basemode/liberalagenda.cpp' object='crimesquad-liberalagenda.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-liberalagenda.o `test -f 'basemode/liberalagenda.cpp' || echo '$(srcdir)/'`basemode/liberalagenda.cpp

crimesquad-liberalagenda.obj: basemode/liberalagenda.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-liberalagenda.obj -MD -MP -MF $(DEPDIR)/crimesquad-liberalagenda.Tpo -c -o crimesquad-liberalagenda.obj `if test -f 'basemode/liberalagenda.cpp'; then $(CYGPATH_W) 'basemode/liberalagenda.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/liberalagenda.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-liberalagenda.Tpo $(DEPDIR)/crimesquad-liberalagenda.Po
#	source='basemode/liberalagenda.cpp' object='crimesquad-liberalagenda.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-liberalagenda.obj `if test -f 'basemode/liberalagenda.cpp'; then $(CYGPATH_W) 'basemode/liberalagenda.cpp'; else $(CYGPATH_W) '$(srcdir)/basemode/liberalagenda.cpp'; fi`

crimesquad-misc.o: common/misc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-misc.o -MD -MP -MF $(DEPDIR)/crimesquad-misc.Tpo -c -o crimesquad-misc.o `test -f 'common/misc.cpp' || echo '$(srcdir)/'`common/misc.cpp
	$(am__mv) $(DEPDIR)/crimesquad-misc.Tpo $(DEPDIR)/crimesquad-misc.Po
#	source='common/misc.cpp' object='crimesquad-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-misc.o `test -f 'common/misc.cpp' || echo '$(srcdir)/'`common/misc.cpp

crimesquad-misc.obj: common/misc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-misc.obj -MD -MP -MF $(DEPDIR)/crimesquad-misc.Tpo -c -o crimesquad-misc.obj `if test -f 'common/misc.cpp'; then $(CYGPATH_W) 'common/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/common/misc.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-misc.Tpo $(DEPDIR)/crimesquad-misc.Po
#	source='common/misc.cpp' object='crimesquad-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-misc.obj `if test -f 'common/misc.cpp'; then $(CYGPATH_W) 'common/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/common/misc.cpp'; fi`

crimesquad-help.o: common/help.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-help.o -MD -MP -MF $(DEPDIR)/crimesquad-help.Tpo -c -o crimesquad-help.o `test -f 'common/help.cpp' || echo '$(srcdir)/'`common/help.cpp
	$(am__mv) $(DEPDIR)/crimesquad-help.Tpo $(DEPDIR)/crimesquad-help.Po
#	source='common/help.cpp' object='crimesquad-help.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-help.o `test -f 'common/help.cpp' || echo '$(srcdir)/'`common/help.cpp

crimesquad-help.obj: common/help.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-help.obj -MD -MP -MF $(DEPDIR)/crimesquad-help.Tpo -c -o crimesquad-help.obj `if test -f 'common/help.cpp'; then $(CYGPATH_W) 'common/help.cpp'; else $(CYGPATH_W) '$(srcdir)/common/help.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-help.Tpo $(DEPDIR)/crimesquad-help.Po
#	source='common/help.cpp' object='crimesquad-help.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-help.obj `if test -f 'common/help.cpp'; then $(CYGPATH_W) 'common/help.cpp'; else $(CYGPATH_W) '$(srcdir)/common/help.cpp'; fi`

crimesquad-creaturenames.o: creature/creaturenames.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creaturenames.o -MD -MP -MF $(DEPDIR)/crimesquad-creaturenames.Tpo -c -o crimesquad-creaturenames.o `test -f 'creature/creaturenames.cpp' || echo '$(srcdir)/'`creature/creaturenames.cpp
	$(am__mv) $(DEPDIR)/crimesquad-creaturenames.Tpo $(DEPDIR)/crimesquad-creaturenames.Po
#	source='creature/creaturenames.cpp' object='crimesquad-creaturenames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creaturenames.o `test -f 'creature/creaturenames.cpp' || echo '$(srcdir)/'`creature/creaturenames.cpp

crimesquad-creaturenames.obj: creature/creaturenames.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-creaturenames.obj -MD -MP -MF $(DEPDIR)/crimesquad-creaturenames.Tpo -c -o crimesquad-creaturenames.obj `if test -f 'creature/creaturenames.cpp'; then $(CYGPATH_W) 'creature/creaturenames.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creaturenames.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-creaturenames.Tpo $(DEPDIR)/crimesquad-creaturenames.Po
#	source='creature/creaturenames.cpp' object='crimesquad-creaturenames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-creaturenames.obj `if test -f 'creature/creaturenames.cpp'; then $(CYGPATH_W) 'creature/creaturenames.cpp'; else $(CYGPATH_W) '$(srcdir)/creature/creaturenames.cpp'; fi`

crimesquad-Markup.o: cmarkup/Markup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-Markup.o -MD -MP -MF $(DEPDIR)/crimesquad-Markup.Tpo -c -o crimesquad-Markup.o `test -f 'cmarkup/Markup.cpp' || echo '$(srcdir)/'`cmarkup/Markup.cpp
	$(am__mv) $(DEPDIR)/crimesquad-Markup.Tpo $(DEPDIR)/crimesquad-Markup.Po
#	source='cmarkup/Markup.cpp' object='crimesquad-Markup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-Markup.o `test -f 'cmarkup/Markup.cpp' || echo '$(srcdir)/'`cmarkup/Markup.cpp

crimesquad-Markup.obj: cmarkup/Markup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-Markup.obj -MD -MP -MF $(DEPDIR)/crimesquad-Markup.Tpo -c -o crimesquad-Markup.obj `if test -f 'cmarkup/Markup.cpp'; then $(CYGPATH_W) 'cmarkup/Markup.cpp'; else $(CYGPATH_W) '$(srcdir)/cmarkup/Markup.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-Markup.Tpo $(DEPDIR)/crimesquad-Markup.Po
#	source='cmarkup/Markup.cpp' object='crimesquad-Markup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-Markup.obj `if test -f 'cmarkup/Markup.cpp'; then $(CYGPATH_W) 'cmarkup/Markup.cpp'; else $(CYGPATH_W) '$(srcdir)/cmarkup/Markup.cpp'; fi`

crimesquad-vehicle.o: vehicle/vehicle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-vehicle.o -MD -MP -MF $(DEPDIR)/crimesquad-vehicle.Tpo -c -o crimesquad-vehicle.o `test -f 'vehicle/vehicle.cpp' || echo '$(srcdir)/'`vehicle/vehicle.cpp
	$(am__mv) $(DEPDIR)/crimesquad-vehicle.Tpo $(DEPDIR)/crimesquad-vehicle.Po
#	source='vehicle/vehicle.cpp' object='crimesquad-vehicle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-vehicle.o `test -f 'vehicle/vehicle.cpp' || echo '$(srcdir)/'`vehicle/vehicle.cpp

crimesquad-vehicle.obj: vehicle/vehicle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-vehicle.obj -MD -MP -MF $(DEPDIR)/crimesquad-vehicle.Tpo -c -o crimesquad-vehicle.obj `if test -f 'vehicle/vehicle.cpp'; then $(CYGPATH_W) 'vehicle/vehicle.cpp'; else $(CYGPATH_W) '$(srcdir)/vehicle/vehicle.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-vehicle.Tpo $(DEPDIR)/crimesquad-vehicle.Po
#	source='vehicle/vehicle.cpp' object='crimesquad-vehicle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-vehicle.obj `if test -f 'vehicle/vehicle.cpp'; then $(CYGPATH_W) 'vehicle/vehicle.cpp'; else $(CYGPATH_W) '$(srcdir)/vehicle/vehicle.cpp'; fi`

crimesquad-vehicletype.o: vehicle/vehicletype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-vehicletype.o -MD -MP -MF $(DEPDIR)/crimesquad-vehicletype.Tpo -c -o crimesquad-vehicletype.o `test -f 'vehicle/vehicletype.cpp' || echo '$(srcdir)/'`vehicle/vehicletype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-vehicletype.Tpo $(DEPDIR)/crimesquad-vehicletype.Po
#	source='vehicle/vehicletype.cpp' object='crimesquad-vehicletype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-vehicletype.o `test -f 'vehicle/vehicletype.cpp' || echo '$(srcdir)/'`vehicle/vehicletype.cpp

crimesquad-vehicletype.obj: vehicle/vehicletype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-vehicletype.obj -MD -MP -MF $(DEPDIR)/crimesquad-vehicletype.Tpo -c -o crimesquad-vehicletype.obj `if test -f 'vehicle/vehicletype.cpp'; then $(CYGPATH_W) 'vehicle/vehicletype.cpp'; else $(CYGPATH_W) '$(srcdir)/vehicle/vehicletype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-vehicletype.Tpo $(DEPDIR)/crimesquad-vehicletype.Po
#	source='vehicle/vehicletype.cpp' object='crimesquad-vehicletype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-vehicletype.obj `if test -f 'vehicle/vehicletype.cpp'; then $(CYGPATH_W) 'vehicle/vehicletype.cpp'; else $(CYGPATH_W) '$(srcdir)/vehicle/vehicletype.cpp'; fi`

crimesquad-armortype.o: items/armortype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-armortype.o -MD -MP -MF $(DEPDIR)/crimesquad-armortype.Tpo -c -o crimesquad-armortype.o `test -f 'items/armortype.cpp' || echo '$(srcdir)/'`items/armortype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-armortype.Tpo $(DEPDIR)/crimesquad-armortype.Po
#	source='items/armortype.cpp' object='crimesquad-armortype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-armortype.o `test -f 'items/armortype.cpp' || echo '$(srcdir)/'`items/armortype.cpp

crimesquad-armortype.obj: items/armortype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-armortype.obj -MD -MP -MF $(DEPDIR)/crimesquad-armortype.Tpo -c -o crimesquad-armortype.obj `if test -f 'items/armortype.cpp'; then $(CYGPATH_W) 'items/armortype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/armortype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-armortype.Tpo $(DEPDIR)/crimesquad-armortype.Po
#	source='items/armortype.cpp' object='crimesquad-armortype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-armortype.obj `if test -f 'items/armortype.cpp'; then $(CYGPATH_W) 'items/armortype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/armortype.cpp'; fi`

crimesquad-clip.o: items/clip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-clip.o -MD -MP -MF $(DEPDIR)/crimesquad-clip.Tpo -c -o crimesquad-clip.o `test -f 'items/clip.cpp' || echo '$(srcdir)/'`items/clip.cpp
	$(am__mv) $(DEPDIR)/crimesquad-clip.Tpo $(DEPDIR)/crimesquad-clip.Po
#	source='items/clip.cpp' object='crimesquad-clip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-clip.o `test -f 'items/clip.cpp' || echo '$(srcdir)/'`items/clip.cpp

crimesquad-clip.obj: items/clip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-clip.obj -MD -MP -MF $(DEPDIR)/crimesquad-clip.Tpo -c -o crimesquad-clip.obj `if test -f 'items/clip.cpp'; then $(CYGPATH_W) 'items/clip.cpp'; else $(CYGPATH_W) '$(srcdir)/items/clip.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-clip.Tpo $(DEPDIR)/crimesquad-clip.Po
#	source='items/clip.cpp' object='crimesquad-clip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-clip.obj `if test -f 'items/clip.cpp'; then $(CYGPATH_W) 'items/clip.cpp'; else $(CYGPATH_W) '$(srcdir)/items/clip.cpp'; fi`

crimesquad-cliptype.o: items/cliptype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cliptype.o -MD -MP -MF $(DEPDIR)/crimesquad-cliptype.Tpo -c -o crimesquad-cliptype.o `test -f 'items/cliptype.cpp' || echo '$(srcdir)/'`items/cliptype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-cliptype.Tpo $(DEPDIR)/crimesquad-cliptype.Po
#	source='items/cliptype.cpp' object='crimesquad-cliptype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cliptype.o `test -f 'items/cliptype.cpp' || echo '$(srcdir)/'`items/cliptype.cpp

crimesquad-cliptype.obj: items/cliptype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-cliptype.obj -MD -MP -MF $(DEPDIR)/crimesquad-cliptype.Tpo -c -o crimesquad-cliptype.obj `if test -f 'items/cliptype.cpp'; then $(CYGPATH_W) 'items/cliptype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/cliptype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-cliptype.Tpo $(DEPDIR)/crimesquad-cliptype.Po
#	source='items/cliptype.cpp' object='crimesquad-cliptype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-cliptype.obj `if test -f 'items/cliptype.cpp'; then $(CYGPATH_W) 'items/cliptype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/cliptype.cpp'; fi`

crimesquad-item.o: items/item.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-item.o -MD -MP -MF $(DEPDIR)/crimesquad-item.Tpo -c -o crimesquad-item.o `test -f 'items/item.cpp' || echo '$(srcdir)/'`items/item.cpp
	$(am__mv) $(DEPDIR)/crimesquad-item.Tpo $(DEPDIR)/crimesquad-item.Po
#	source='items/item.cpp' object='crimesquad-item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-item.o `test -f 'items/item.cpp' || echo '$(srcdir)/'`items/item.cpp

crimesquad-item.obj: items/item.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-item.obj -MD -MP -MF $(DEPDIR)/crimesquad-item.Tpo -c -o crimesquad-item.obj `if test -f 'items/item.cpp'; then $(CYGPATH_W) 'items/item.cpp'; else $(CYGPATH_W) '$(srcdir)/items/item.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-item.Tpo $(DEPDIR)/crimesquad-item.Po
#	source='items/item.cpp' object='crimesquad-item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-item.obj `if test -f 'items/item.cpp'; then $(CYGPATH_W) 'items/item.cpp'; else $(CYGPATH_W) '$(srcdir)/items/item.cpp'; fi`

crimesquad-itemtype.o: items/itemtype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-itemtype.o -MD -MP -MF $(DEPDIR)/crimesquad-itemtype.Tpo -c -o crimesquad-itemtype.o `test -f 'items/itemtype.cpp' || echo '$(srcdir)/'`items/itemtype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-itemtype.Tpo $(DEPDIR)/crimesquad-itemtype.Po
#	source='items/itemtype.cpp' object='crimesquad-itemtype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-itemtype.o `test -f 'items/itemtype.cpp' || echo '$(srcdir)/'`items/itemtype.cpp

crimesquad-itemtype.obj: items/itemtype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-itemtype.obj -MD -MP -MF $(DEPDIR)/crimesquad-itemtype.Tpo -c -o crimesquad-itemtype.obj `if test -f 'items/itemtype.cpp'; then $(CYGPATH_W) 'items/itemtype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/itemtype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-itemtype.Tpo $(DEPDIR)/crimesquad-itemtype.Po
#	source='items/itemtype.cpp' object='crimesquad-itemtype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-itemtype.obj `if test -f 'items/itemtype.cpp'; then $(CYGPATH_W) 'items/itemtype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/itemtype.cpp'; fi`

crimesquad-loot.o: items/loot.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-loot.o -MD -MP -MF $(DEPDIR)/crimesquad-loot.Tpo -c -o crimesquad-loot.o `test -f 'items/loot.cpp' || echo '$(srcdir)/'`items/loot.cpp
	$(am__mv) $(DEPDIR)/crimesquad-loot.Tpo $(DEPDIR)/crimesquad-loot.Po
#	source='items/loot.cpp' object='crimesquad-loot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-loot.o `test -f 'items/loot.cpp' || echo '$(srcdir)/'`items/loot.cpp

crimesquad-loot.obj: items/loot.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-loot.obj -MD -MP -MF $(DEPDIR)/crimesquad-loot.Tpo -c -o crimesquad-loot.obj `if test -f 'items/loot.cpp'; then $(CYGPATH_W) 'items/loot.cpp'; else $(CYGPATH_W) '$(srcdir)/items/loot.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-loot.Tpo $(DEPDIR)/crimesquad-loot.Po
#	source='items/loot.cpp' object='crimesquad-loot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-loot.obj `if test -f 'items/loot.cpp'; then $(CYGPATH_W) 'items/loot.cpp'; else $(CYGPATH_W) '$(srcdir)/items/loot.cpp'; fi`

crimesquad-loottype.o: items/loottype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-loottype.o -MD -MP -MF $(DEPDIR)/crimesquad-loottype.Tpo -c -o crimesquad-loottype.o `test -f 'items/loottype.cpp' || echo '$(srcdir)/'`items/loottype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-loottype.Tpo $(DEPDIR)/crimesquad-loottype.Po
#	source='items/loottype.cpp' object='crimesquad-loottype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-loottype.o `test -f 'items/loottype.cpp' || echo '$(srcdir)/'`items/loottype.cpp

crimesquad-loottype.obj: items/loottype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-loottype.obj -MD -MP -MF $(DEPDIR)/crimesquad-loottype.Tpo -c -o crimesquad-loottype.obj `if test -f 'items/loottype.cpp'; then $(CYGPATH_W) 'items/loottype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/loottype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-loottype.Tpo $(DEPDIR)/crimesquad-loottype.Po
#	source='items/loottype.cpp' object='crimesquad-loottype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-loottype.obj `if test -f 'items/loottype.cpp'; then $(CYGPATH_W) 'items/loottype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/loottype.cpp'; fi`

crimesquad-money.o: items/money.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-money.o -MD -MP -MF $(DEPDIR)/crimesquad-money.Tpo -c -o crimesquad-money.o `test -f 'items/money.cpp' || echo '$(srcdir)/'`items/money.cpp
	$(am__mv) $(DEPDIR)/crimesquad-money.Tpo $(DEPDIR)/crimesquad-money.Po
#	source='items/money.cpp' object='crimesquad-money.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-money.o `test -f 'items/money.cpp' || echo '$(srcdir)/'`items/money.cpp

crimesquad-money.obj: items/money.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-money.obj -MD -MP -MF $(DEPDIR)/crimesquad-money.Tpo -c -o crimesquad-money.obj `if test -f 'items/money.cpp'; then $(CYGPATH_W) 'items/money.cpp'; else $(CYGPATH_W) '$(srcdir)/items/money.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-money.Tpo $(DEPDIR)/crimesquad-money.Po
#	source='items/money.cpp' object='crimesquad-money.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-money.obj `if test -f 'items/money.cpp'; then $(CYGPATH_W) 'items/money.cpp'; else $(CYGPATH_W) '$(srcdir)/items/money.cpp'; fi`

crimesquad-weapon.o: items/weapon.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-weapon.o -MD -MP -MF $(DEPDIR)/crimesquad-weapon.Tpo -c -o crimesquad-weapon.o `test -f 'items/weapon.cpp' || echo '$(srcdir)/'`items/weapon.cpp
	$(am__mv) $(DEPDIR)/crimesquad-weapon.Tpo $(DEPDIR)/crimesquad-weapon.Po
#	source='items/weapon.cpp' object='crimesquad-weapon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-weapon.o `test -f 'items/weapon.cpp' || echo '$(srcdir)/'`items/weapon.cpp

crimesquad-weapon.obj: items/weapon.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-weapon.obj -MD -MP -MF $(DEPDIR)/crimesquad-weapon.Tpo -c -o crimesquad-weapon.obj `if test -f 'items/weapon.cpp'; then $(CYGPATH_W) 'items/weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/items/weapon.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-weapon.Tpo $(DEPDIR)/crimesquad-weapon.Po
#	source='items/weapon.cpp' object='crimesquad-weapon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-weapon.obj `if test -f 'items/weapon.cpp'; then $(CYGPATH_W) 'items/weapon.cpp'; else $(CYGPATH_W) '$(srcdir)/items/weapon.cpp'; fi`

crimesquad-weapontype.o: items/weapontype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-weapontype.o -MD -MP -MF $(DEPDIR)/crimesquad-weapontype.Tpo -c -o crimesquad-weapontype.o `test -f 'items/weapontype.cpp' || echo '$(srcdir)/'`items/weapontype.cpp
	$(am__mv) $(DEPDIR)/crimesquad-weapontype.Tpo $(DEPDIR)/crimesquad-weapontype.Po
#	source='items/weapontype.cpp' object='crimesquad-weapontype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-weapontype.o `test -f 'items/weapontype.cpp' || echo '$(srcdir)/'`items/weapontype.cpp

crimesquad-weapontype.obj: items/weapontype.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-weapontype.obj -MD -MP -MF $(DEPDIR)/crimesquad-weapontype.Tpo -c -o crimesquad-weapontype.obj `if test -f 'items/weapontype.cpp'; then $(CYGPATH_W) 'items/weapontype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/weapontype.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-weapontype.Tpo $(DEPDIR)/crimesquad-weapontype.Po
#	source='items/weapontype.cpp' object='crimesquad-weapontype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-weapontype.obj `if test -f 'items/weapontype.cpp'; then $(CYGPATH_W) 'items/weapontype.cpp'; else $(CYGPATH_W) '$(srcdir)/items/weapontype.cpp'; fi`

crimesquad-shop.o: sitemode/shop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-shop.o -MD -MP -MF $(DEPDIR)/crimesquad-shop.Tpo -c -o crimesquad-shop.o `test -f 'sitemode/shop.cpp' || echo '$(srcdir)/'`sitemode/shop.cpp
	$(am__mv) $(DEPDIR)/crimesquad-shop.Tpo $(DEPDIR)/crimesquad-shop.Po
#	source='sitemode/shop.cpp' object='crimesquad-shop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-shop.o `test -f 'sitemode/shop.cpp' || echo '$(srcdir)/'`sitemode/shop.cpp

crimesquad-shop.obj: sitemode/shop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-shop.obj -MD -MP -MF $(DEPDIR)/crimesquad-shop.Tpo -c -o crimesquad-shop.obj `if test -f 'sitemode/shop.cpp'; then $(CYGPATH_W) 'sitemode/shop.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/shop.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-shop.Tpo $(DEPDIR)/crimesquad-shop.Po
#	source='sitemode/shop.cpp' object='crimesquad-shop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-shop.obj `if test -f 'sitemode/shop.cpp'; then $(CYGPATH_W) 'sitemode/shop.cpp'; else $(CYGPATH_W) '$(srcdir)/sitemode/shop.cpp'; fi`

crimesquad-log.o: log/log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-log.o -MD -MP -MF $(DEPDIR)/crimesquad-log.Tpo -c -o crimesquad-log.o `test -f 'log/log.cpp' || echo '$(srcdir)/'`log/log.cpp
	$(am__mv) $(DEPDIR)/crimesquad-log.Tpo $(DEPDIR)/crimesquad-log.Po
#	source='log/log.cpp' object='crimesquad-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-log.o `test -f 'log/log.cpp' || echo '$(srcdir)/'`log/log.cpp

crimesquad-log.obj: log/log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-log.obj -MD -MP -MF $(DEPDIR)/crimesquad-log.Tpo -c -o crimesquad-log.obj `if test -f 'log/log.cpp'; then $(CYGPATH_W) 'log/log.cpp'; else $(CYGPATH_W) '$(srcdir)/log/log.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-log.Tpo $(DEPDIR)/crimesquad-log.Po
#	source='log/log.cpp' object='crimesquad-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-log.obj `if test -f 'log/log.cpp'; then $(CYGPATH_W) 'log/log.cpp'; else $(CYGPATH_W) '$(srcdir)/log/log.cpp'; fi`

crimesquad-locations.o: title/locations.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-locations.o -MD -MP -MF $(DEPDIR)/crimesquad-locations.Tpo -c -o crimesquad-locations.o `test -f 'title/locations.cpp' || echo '$(srcdir)/'`title/locations.cpp
	$(am__mv) $(DEPDIR)/crimesquad-locations.Tpo $(DEPDIR)/crimesquad-locations.Po
#	source='title/locations.cpp' object='crimesquad-locations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-locations.o `test -f 'title/locations.cpp' || echo '$(srcdir)/'`title/locations.cpp

crimesquad-locations.obj: title/locations.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-locations.obj -MD -MP -MF $(DEPDIR)/crimesquad-locations.Tpo -c -o crimesquad-locations.obj `if test -f 'title/locations.cpp'; then $(CYGPATH_W) 'title/locations.cpp'; else $(CYGPATH_W) '$(srcdir)/title/locations.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-locations.Tpo $(DEPDIR)/crimesquad-locations.Po
#	source='title/locations.cpp' object='crimesquad-locations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-locations.obj `if test -f 'title/locations.cpp'; then $(CYGPATH_W) 'title/locations.cpp'; else $(CYGPATH_W) '$(srcdir)/title/locations.cpp'; fi`

crimesquad-initfile.o: title/initfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-initfile.o -MD -MP -MF $(DEPDIR)/crimesquad-initfile.Tpo -c -o crimesquad-initfile.o `test -f 'title/initfile.cpp' || echo '$(srcdir)/'`title/initfile.cpp
	$(am__mv) $(DEPDIR)/crimesquad-initfile.Tpo $(DEPDIR)/crimesquad-initfile.Po
#	source='title/initfile.cpp' object='crimesquad-initfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-initfile.o `test -f 'title/initfile.cpp' || echo '$(srcdir)/'`title/initfile.cpp

crimesquad-initfile.obj: title/initfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -MT crimesquad-initfile.obj -MD -MP -MF $(DEPDIR)/crimesquad-initfile.Tpo -c -o crimesquad-initfile.obj `if test -f 'title/initfile.cpp'; then $(CYGPATH_W) 'title/initfile.cpp'; else $(CYGPATH_W) '$(srcdir)/title/initfile.cpp'; fi`
	$(am__mv) $(DEPDIR)/crimesquad-initfile.Tpo $(DEPDIR)/crimesquad-initfile.Po
#	source='title/initfile.cpp' object='crimesquad-initfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crimesquad_CPPFLAGS) $(CPPFLAGS) $(crimesquad_CXXFLAGS) $(CXXFLAGS) -c -o crimesquad-initfile.obj `if test -f 'title/initfile.cpp'; then $(CYGPATH_W) 'title/initfile.cpp'; else $(CYGPATH_W) '$(srcdir)/title/initfile.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
